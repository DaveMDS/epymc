//// SCROLLER (elm/scroller/base/default) /////////////////////////////////////
#define SCROLLBARS_ADD() \
   images { \
       image: "bt_sm_base2.png" COMP; \
       image: "bt_sm_shine.png" COMP; \
       image: "bt_sm_hilight.png" COMP; \
       image: "sb_runnerh.png" COMP; \
       image: "sb_runnerv.png" COMP; \
       /*image: "arrow_up.png" COMP;*/ \
       /*image: "arrow_down.png" COMP;*/ \
       /*image: "arrow_right.png" COMP;*/ \
       /*image: "arrow_left.png" COMP;*/ \
   } \
   script { \
       public sbvis_v, sbvis_h; \
   } \
   part { name: "XXX"; \
       type: RECT; \
       mouse_events: 0; \
       description { state: "default" 0.0; \
         rel1.to: "sb_vbar_a1"; \
         rel2.to: "sb_vbar_a1"; \
         color: 200 0 0 100; \
       } \
   } \
   part { name: "elm.scrollbar.base"; \
       type: SWALLOW; \
       mouse_events: 0; \
       description { state: "default" 0.0; \
           min: 13 13; \
           fixed: 1 1; \
           align: 1.0 1.0; \
           rel1.relative: 1.0 1.0; \
           rel2.offset: 12 12; \
       } \
       description { state: "vertical" 0.0; \
           inherit: "default" 0.0; \
           align: 1.0 0.0; \
           rel2.offset: -2 12; \
       } \
       description { state: "horizontal" 0.0; \
           inherit: "default" 0.0; \
           align: 0.0 1.0; \
           rel2.offset: 12 -2; \
       } \
       description { state: "both" 0.0; \
           inherit: "default" 0.0; \
           align: 1.0 1.0; \
           rel2.offset: -2 -2; \
       } \
   } \
   part { name: "sb_vbar_clip_master"; \
       type: RECT; \
       mouse_events: 0; \
       description { state: "default" 0.0; \
       } \
       description { state: "hidden" 0.0; \
           visible: 0; \
       } \
   } \
   part { name: "sb_vbar_clip"; \
       type: RECT; \
       mouse_events: 0; \
       clip_to: "sb_vbar_clip_master"; \
       description { state: "default" 0.0; \
           rel1.to: "sb_vbar_clip_master"; \
           rel2.to: "sb_vbar_clip_master"; \
       } \
       description { state: "hidden" 0.0; \
           inherit: "default" 0.0; \
           visible: 0; \
           max: 0 99999; \
       } \
   } \
   part { name: "sb_vbar"; \
       type: RECT; \
       mouse_events: 0; \
       clip_to: "sb_vbar_clip"; \
       description { state: "default" 0.0; \
           min: 13 0; \
           fixed: 1 1; \
           color: 0 0 0 0; \
           align: 0.0 0.5; \
           rel1 { \
               to_y: "sb_vbar_a1"; \
               to_x: "elm.scrollbar.base"; \
               relative: 0.0 1.0; \
               offset: 0 -1; \
           } \
           rel2 { \
               to_y: "sb_vbar_a2"; \
               relative: 1.0 0.0; \
               offset: -1 -2; \
           } \
       } \
   } \
   part { name: "sb_vbar_runner"; \
       mouse_events: 0; \
       clip_to: "sb_vbar_clip"; \
       description { state: "default" 0.0; \
           min: 3 0; \
           max: 3 99999; \
           fixed: 1 1; \
           align: 1.0 0.5; \
           rel1 { \
               to: "sb_vbar"; \
               relative: 0.5 0.0; \
               offset: 0 2; \
           } \
           rel2 { \
               to: "sb_vbar"; \
               relative: 0.5 1.0; \
               offset: 0 -2; \
           } \
           image { \
               normal: "sb_runnerv.png"; \
               border: 0 0 4 4; \
           } \
           fill.smooth: 0; \
       } \
   } \
   part { name: "sb_vbar_p1"; \
       type: RECT; \
       mouse_events: 1; \
       clip_to: "sb_vbar_clip"; \
       description { state: "default" 0.0; \
           color: 0 0 0 0; \
           fixed: 1 1; \
           rel1 { \
               to: "sb_vbar_a1"; \
               relative: 0.0 1.0; \
           } \
           rel2 { \
               to: "elm.dragable.vbar"; \
               relative: 1.0 0.0; \
           } \
       } \
   } \
   part { name: "sb_vbar_p2"; \
       type: RECT; \
       mouse_events: 1; \
       clip_to: "sb_vbar_clip"; \
       description { state: "default" 0.0; \
           color: 0 0 0 0; \
           fixed: 1 1; \
           rel1 { \
               to: "elm.dragable.vbar"; \
               relative: 0.0 1.0; \
           } \
           rel2 { \
               to: "sb_vbar_a2"; \
               relative: 1.0 0.0; \
           } \
       } \
   } \
   part { name: "sb_vbar_a1"; \
       type: RECT; \
       mouse_events: 1; \
       clip_to: "sb_vbar_clip"; \
       description { state: "default" 0.0; \
           min: 13 0; \
           max: 999 0; \
           visible: 0; \
           fixed: 1 1; \
           align: 0.5 0.0; \
           /*aspect: 1.0 1.0;*/ \
           /*aspect_preference: HORIZONTAL;*/ \
           color: 0 0 0 0; \
           rel1 { \
               to_y: "sb_vbar_clip"; \
               to_x: "elm.scrollbar.base"; \
               relative: 0.0 0.0; \
               offset: 0 1; \
           } \
           rel2 { \
               to: "elm.scrollbar.base"; \
               relative: 1.0 0.0; \
               offset: -1 -2; \
           } \
       } \
   } \
   part { name: "sb_vbar_a1_arrow"; \
       mouse_events: 0; \
       clip_to: "sb_vbar_clip"; \
       description { state: "default" 0.0; \
           rel1.to: "sb_vbar_a1"; \
           rel2.to: "sb_vbar_a1"; \
           visible: 0; \
           /*image.normal: "arrow_up.png"; */ \
       } \
       description { state: "clicked" 0.0; \
           inherit: "default" 0.0; \
           rel1.offset: 0 -1; \
           rel2.offset: -1 -2; \
       } \
   } \
   part { name: "sb_vbar_a2"; \
       type: RECT; \
       mouse_events: 1; \
       clip_to: "sb_vbar_clip"; \
       description { state: "default" 0.0; \
           min: 13 0; \
           max: 999 0; \
           visible: 0; \
           fixed: 1 1; \
           align: 0.5 1.0; \
           /*aspect: 1.0 1.0;*/ \
           /*aspect_preference: HORIZONTAL;*/ \
           color: 0 0 0 0; \
           rel1.to: "elm.scrollbar.base"; \
           rel2 { \
               to: "elm.scrollbar.base"; \
               relative: 1.0 0.0; \
           } \
       } \
   } \
   part { name: "sb_vbar_a2_arrow"; \
       mouse_events: 0; \
       clip_to: "sb_vbar_clip"; \
       description { state: "default" 0.0; \
           rel1.to: "sb_vbar_a2"; \
           rel2.to: "sb_vbar_a2"; \
           visible: 0; \
           /* image.normal: "arrow_down.png";*/ \
       } \
       description { state: "clicked" 0.0; \
           inherit: "default" 0.0; \
           rel1.offset: 0 1; \
           rel2.offset: -1 0; \
       } \
   } \
   part { name: "elm.dragable.vbar"; \
       type: RECT; \
       mouse_events: 1; \
       clip_to: "sb_vbar_clip"; \
       dragable { \
           x: 0 0 0; \
           y: 1 1 0; \
           confine: "sb_vbar"; \
       } \
       description { state: "default" 0.0; \
           min: 13 20; \
           fixed: 1 1; \
           aspect: 1.0 0.5; \
           aspect_preference: VERTICAL; \
           align: 0.5 0.0; \
           color: 0 0 0 0; \
           rel1 { \
               to_y: "sb_vbar"; \
               to_x: "elm.scrollbar.base"; \
               relative: 0.0 0.0; \
           } \
           rel2.to_y: "sb_vbar"; \
       } \
   } \
   part { name: "elm.dragable.vbar.image"; \
       mouse_events: 0; \
       clip_to: "sb_vbar_clip"; \
       description { state: "default" 0.0; \
           rel1.to: "elm.dragable.vbar"; \
           rel2.to: "elm.dragable.vbar"; \
           image { \
               normal: "bt_sm_base2.png"; \
               border: 6 6 6 6; \
           } \
       } \
   } \
   part { name: "sb_vbar_over1"; \
       clip_to: "sb_vbar_clip"; \
       mouse_events: 0; \
       description { state: "default" 0.0; \
           rel1.to: "elm.dragable.vbar.image"; \
           rel2 { \
               to: "elm.dragable.vbar.image"; \
               relative: 1.0 0.5; \
           } \
           image { \
               normal: "bt_sm_hilight.png"; \
               border: 6 6 6 0; \
           } \
       } \
   } \
   part { name: "sb_vbar_over2"; \
       clip_to: "sb_vbar_clip"; \
       mouse_events: 0; \
       description { state: "default" 0.0; \
           rel1.to: "elm.dragable.vbar.image"; \
           rel2.to: "elm.dragable.vbar.image"; \
           image { \
               normal: "bt_sm_shine.png"; \
               border: 6 6 6 0; \
           } \
       } \
   } \
   part { name: "sb_hbar_clip_master"; \
       type: RECT; \
       mouse_events: 0; \
       description { state: "default" 0.0; \
       } \
       description { state: "hidden" 0.0; \
           visible: 0; \
       } \
   } \
   part { name: "sb_hbar_clip"; \
       type: RECT; \
       mouse_events: 0; \
       clip_to: "sb_hbar_clip_master"; \
       description { state: "default" 0.0; \
           rel1.to: "sb_hbar_clip_master"; \
           rel2.to: "sb_hbar_clip_master"; \
       } \
       description { state: "hidden" 0.0; \
           inherit: "default" 0.0; \
           visible: 0; \
           max: 99999 0; \
       } \
   } \
   part { name: "sb_hbar"; \
       type: RECT; \
       mouse_events: 0; \
       clip_to: "sb_hbar_clip"; \
       description { state: "default" 0.0; \
           min: 0 13; \
           fixed: 1 1; \
           color: 0 0 0 0; \
           align: 0.5 0.5; \
           rel1 { \
               to_x: "sb_hbar_a1"; \
               to_y: "elm.scrollbar.base"; \
               relative: 1.0 0.0; \
               offset: -1 0; \
           } \
           rel2 { \
               to_x: "sb_hbar_a2"; \
               relative: 0.0 1.0; \
               offset: -2 -1; \
           } \
       } \
   } \
   part { name: "sb_hbar_runner"; \
       mouse_events: 0; \
       clip_to: "sb_hbar_clip"; \
       description { state: "default" 0.0; \
           min: 0 3; \
           max: 99999 3; \
           fixed: 1 1; \
           align: 0.5 0.5; \
           rel1 { \
               to: "sb_hbar"; \
               relative: 0.0 0.5; \
               offset: 2 0; \
           } \
           rel2 { \
               to: "sb_hbar"; \
               relative: 1.0 0.5; \
               offset: -2 0; \
           } \
           image { \
               normal: "sb_runnerh.png"; \
               border: 4 4 0 0; \
           } \
           fill.smooth: 0; \
       } \
   } \
   part { name: "elm.dragable.hbar"; \
       type: RECT; \
       mouse_events: 1; \
       clip_to: "sb_hbar_clip"; \
       dragable { \
           x: 1 1 0; \
           y: 0 0 0; \
           confine: "sb_hbar"; \
       } \
       description { state: "default" 0.0; \
           min: 20 13; \
           fixed: 1 1; \
           aspect_preference: HORIZONTAL; \
           align: 0.0 1.0; \
           color: 0 0 0 0; \
           rel1 { \
               to_x: "sb_hbar"; \
               relative: 0.0 1.0; \
           } \
           rel2.to_x: "sb_hbar"; \
       } \
   } \
   part { name: "elm.dragable.hbar.image"; \
       mouse_events: 0; \
       clip_to: "sb_hbar_clip"; \
       description { state: "default" 0.0; \
           rel1.to: "elm.dragable.hbar"; \
           rel2.to: "elm.dragable.hbar"; \
           image { \
               normal: "bt_sm_base2.png"; \
               border: 6 6 6 6; \
           } \
       } \
   } \
   part { name: "sb_hbar_over1"; \
       clip_to: "sb_hbar_clip"; \
       mouse_events: 0; \
       description { state: "default" 0.0; \
           rel1.to: "elm.dragable.hbar.image"; \
           rel2 { \
               to: "elm.dragable.hbar.image"; \
               relative: 1.0 0.5; \
           } \
           image { \
               normal: "bt_sm_hilight.png"; \
               border: 6 6 6 0; \
           } \
       } \
   } \
   part { name: "sb_hbar_over2"; \
       clip_to: "sb_hbar_clip"; \
       mouse_events: 0; \
       description { state: "default" 0.0; \
           rel1.to: "elm.dragable.hbar.image"; \
           rel2.to: "elm.dragable.hbar.image"; \
           image { \
               normal: "bt_sm_shine.png"; \
               border: 6 6 6 0; \
           } \
       } \
   } \
   part { name: "sb_hbar_p1"; \
       type: RECT; \
       mouse_events: 1; \
       clip_to: "sb_hbar_clip"; \
       description { state: "default" 0.0; \
           color: 0 0 0 0; \
           fixed: 1 1; \
           rel1 { \
               to: "sb_hbar_a1"; \
               relative: 1.0 0.0; \
           } \
           rel2 { \
               to: "elm.dragable.hbar"; \
               relative: 0.0 1.0; \
           } \
       } \
   } \
   part { name: "sb_hbar_p2"; \
       type: RECT; \
       mouse_events: 1; \
       clip_to: "sb_hbar_clip"; \
       description { state: "default" 0.0; \
           color: 0 0 0 0; \
           fixed: 1 1; \
           rel1 { \
               to: "elm.dragable.hbar"; \
               relative: 1.0 0.0; \
           } \
           rel2 { \
               to: "sb_hbar_a2"; \
               relative: 0.0 1.0; \
           } \
       } \
   } \
   part { name: "sb_hbar_a1"; \
       type: RECT; \
       mouse_events: 1; \
       clip_to: "sb_hbar_clip"; \
       description { state: "default" 0.0; \
           min: 0 13; \
           max: 0 999; \
           fixed: 1 1; \
           visible: 0; \
           align: 0.0 1.0; \
           /*aspect: 1.0 1.0;*/ \
           /*aspect_preference: VERTICAL;*/ \
           color: 0 0 0 0; \
           rel1 { \
               to_x: "sb_hbar_clip"; \
               to_y: "elm.scrollbar.base"; \
               relative: 0.0 0.0; \
           } \
           rel2 { \
               to: "elm.scrollbar.base"; \
               relative: 0.0 1.0; \
               offset: -1 -1; \
           } \
       } \
   } \
   part { name: "sb_hbar_a1_arrow"; \
       mouse_events: 0; \
       clip_to: "sb_hbar_clip"; \
       description { state: "default" 0.0; \
           rel1.to: "sb_hbar_a1"; \
           rel2.to: "sb_hbar_a1"; \
           visible: 0; \
           /* image.normal: "arrow_left.png";*/ \
       } \
       description { state: "clicked" 0.0; \
           inherit: "default" 0.0; \
           rel1.offset: -1 0; \
           rel2.offset: -2 -1; \
       } \
   } \
   part { name: "sb_hbar_a2"; \
       type: RECT; \
       mouse_events: 1; \
       clip_to: "sb_hbar_clip"; \
       description { state: "default" 0.0; \
           min: 0 13; \
           max: 0 999; \
           align: 1.0 1.0; \
           fixed: 1 1; \
           /*aspect: 1.0 1.0;*/ \
           /*aspect_preference: VERTICAL;*/ \
           color: 0 0 0 0; \
           rel1 { \
               to: "elm.scrollbar.base"; \
               relative: 1.0 0.0; \
           } \
           rel2 { \
               to: "elm.scrollbar.base"; \
               relative: 0.0 1.0; \
           } \
       } \
   } \
   part { name: "sb_hbar_a2_arrow"; \
       mouse_events: 0; \
       clip_to: "sb_hbar_clip"; \
       description { state: "default" 0.0; \
           rel1.to: "sb_hbar_a2"; \
           rel2.to: "sb_hbar_a2"; \
           visible: 0; \
           /* image.normal: "arrow_right.png";*/ \
       } \
       description { state: "clicked" 0.0; \
           inherit: "default" 0.0; \
           rel1.offset: 1 0; \
           rel2.offset: 0 -1; \
       } \
   } \
   part { name: "disabler"; \
      type: RECT; \
      description { state: "default" 0.0; \
         rel1.to: "clipper"; \
         rel2.to: "clipper"; \
         color: 0 0 0 0; \
         visible: 0; \
      } \
      description { state: "disabled" 0.0; \
         inherit: "default" 0.0; \
         visible: 1; \
         color: 128 128 128 128; \
      } \
   } \
   programs { \
       program { name: "load"; \
           signal: "load"; \
           source: ""; \
           script { \
               set_state(PART:"sb_hbar_clip", "hidden", 0.0); \
               set_state(PART:"sb_vbar_clip", "hidden", 0.0); \
               set_int(sbvis_h, 0); \
               set_int(sbvis_v, 0); \
           } \
       } \
       program { name: "vbar_show"; \
           signal: "elm,action,show,vbar"; \
           source: "elm"; \
           script { \
               set_state(PART:"sb_vbar_clip_master", "default", 0.0); \
               set_int(sbvis_v, 1); \
               if (get_int(sbvis_h)) \
                   set_state(PART:"elm.scrollbar.base", "both", 0.0); \
               else \
                   set_state(PART:"elm.scrollbar.base", "vertical", 0.0); \
               emit("do-show-vbar", ""); \
           } \
       } \
       program { name: "vbar_hide"; \
           signal: "elm,action,hide,vbar"; \
           source: "elm"; \
           script { \
               set_state(PART:"sb_vbar_clip_master", "hidden", 0.0); \
               set_int(sbvis_v, 0); \
               if (get_int(sbvis_h)) \
                   set_state(PART:"elm.scrollbar.base", "horizontal", 0.0); \
               else \
                   set_state(PART:"elm.scrollbar.base", "default", 0.0); \
               emit("do-hide-vbar", ""); \
           } \
       } \
       program { name: "sb_vbar_down"; \
           signal: "mouse,down,1"; \
           source: "elm.dragable.vbar"; \
           action: STATE_SET "clicked" 0.0; \
           target: "elm.dragable.vbar"; \
       } \
       program { name: "sb_vbar_up"; \
           signal: "mouse,up,1"; \
           source: "elm.dragable.vbar"; \
           action: STATE_SET "default" 0.0; \
           target: "elm.dragable.vbar"; \
       } \
       program { name: "sb_vbar_show"; \
           signal: "do-show-vbar"; \
           source: ""; \
           action: STATE_SET "default" 0.0; \
           transition: LINEAR 0.1; \
           target: "sb_vbar_clip"; \
       } \
       program { name: "sb_vbar_hide"; \
           signal: "do-hide-vbar"; \
           source: ""; \
           action: STATE_SET "hidden" 0.0; \
           transition: LINEAR 1.0; \
           target: "sb_vbar_clip"; \
       } \
       program { name: "sb_vbar_a1_down"; \
           signal: "mouse,down,1"; \
           source: "sb_vbar_a1"; \
           action: STATE_SET "clicked" 0.0; \
           target: "sb_vbar_a1_arrow"; \
       } \
       program { name: "sb_vbar_a1_down2"; \
           signal: "mouse,down,1"; \
           source: "sb_vbar_a1"; \
           action: DRAG_VAL_STEP 0.0 -1.0; \
           target: "elm.dragable.vbar"; \
       } \
       program { name: "sb_vbar_a1_up"; \
           signal: "mouse,up,1"; \
           source: "sb_vbar_a1"; \
           action: STATE_SET "default" 0.0; \
           target: "sb_vbar_a1_arrow"; \
       } \
       program { name: "sb_vbar_a2_down"; \
           signal: "mouse,down,1"; \
           source: "sb_vbar_a2"; \
           action: STATE_SET "clicked" 0.0; \
           target: "sb_vbar_a2_arrow"; \
       } \
       program { name: "sb_vbar_a2_down2"; \
           signal: "mouse,down,1"; \
           source: "sb_vbar_a2"; \
           action: DRAG_VAL_STEP 0.0 1.0; \
           target: "elm.dragable.vbar"; \
       } \
       program { name: "sb_vbar_a2_up"; \
           signal: "mouse,up,1"; \
           source: "sb_vbar_a2"; \
           action: STATE_SET "default" 0.0; \
           target: "sb_vbar_a2_arrow"; \
       } \
       program { name: "sb_vbar_p1_down"; \
           signal: "mouse,down,1"; \
           source: "sb_vbar_p1"; \
           action: DRAG_VAL_PAGE 0.0 -1.0; \
           target: "elm.dragable.vbar"; \
       } \
       program { name: "sb_vbar_p2_down"; \
           signal: "mouse,down,1"; \
           source: "sb_vbar_p2"; \
           action: DRAG_VAL_PAGE 0.0 1.0; \
           target: "elm.dragable.vbar"; \
       } \
       program { name: "hbar_show"; \
           signal: "elm,action,show,hbar"; \
           source: "elm"; \
           script { \
               set_state(PART:"sb_hbar_clip_master", "default", 0.0); \
               set_int(sbvis_h, 1); \
               if (get_int(sbvis_v)) \
                   set_state(PART:"elm.scrollbar.base", "both", 0.0); \
               else \
                   set_state(PART:"elm.scrollbar.base", "horizontal", 0.0); \
               emit("do-show-hbar", ""); \
           } \
       } \
       program { name: "hbar_hide"; \
           signal: "elm,action,hide,hbar"; \
           source: "elm"; \
           script { \
               set_state(PART:"sb_hbar_clip_master", "hidden", 0.0); \
               set_int(sbvis_h, 0); \
               if (get_int(sbvis_v)) \
                   set_state(PART:"elm.scrollbar.base", "vertical", 0.0); \
               else \
                   set_state(PART:"elm.scrollbar.base", "default", 0.0); \
               emit("do-hide-hbar", ""); \
           } \
       } \
       program { name: "sb_hbar_down"; \
           signal: "mouse,down,1"; \
           source: "elm.dragable.hbar"; \
           action: STATE_SET "clicked" 0.0; \
           target: "elm.dragable.hbar"; \
       } \
       program { name: "sb_hbar_up"; \
           signal: "mouse,up,1"; \
           source: "elm.dragable.hbar"; \
           action: STATE_SET "default" 0.0; \
           target: "elm.dragable.hbar"; \
       } \
       program { name: "sb_hbar_show"; \
           signal: "do-show-hbar"; \
           source: ""; \
           action: STATE_SET "default" 0.0; \
           transition: LINEAR 0.1; \
           target: "sb_hbar_clip"; \
       } \
       program { name: "sb_hbar_hide"; \
           signal: "do-hide-hbar"; \
           source: ""; \
           action: STATE_SET "hidden" 0.0; \
           transition: LINEAR 1.0; \
           target: "sb_hbar_clip"; \
       } \
       program { name: "sb_hbar_a1_down"; \
           signal: "mouse,down,1"; \
           source: "sb_hbar_a1"; \
           action: STATE_SET "clicked" 0.0; \
           target: "sb_hbar_a1_arrow"; \
       } \
       program { name: "sb_hbar_a1_down2"; \
           signal: "mouse,down,1"; \
           source: "sb_hbar_a1"; \
           action: DRAG_VAL_STEP -1.0 0.0; \
           target: "elm.dragable.hbar"; \
       } \
       program { name: "sb_hbar_a1_up"; \
           signal: "mouse,up,1"; \
           source: "sb_hbar_a1"; \
           action: STATE_SET "default" 0.0; \
           target: "sb_hbar_a1_arrow"; \
       } \
       program { name: "sb_hbar_a2_down"; \
           signal: "mouse,down,1"; \
           source: "sb_hbar_a2"; \
           action: STATE_SET "clicked" 0.0; \
           target: "sb_hbar_a2_arrow"; \
       } \
       program { name: "sb_hbar_a2_down2"; \
           signal: "mouse,down,1"; \
           source: "sb_hbar_a2"; \
           action: DRAG_VAL_STEP 1.0 0.0; \
           target: "elm.dragable.hbar"; \
       } \
       program { name: "sb_hbar_a2_up"; \
           signal: "mouse,up,1"; \
           source: "sb_hbar_a2"; \
           action: STATE_SET "default" 0.0; \
           target: "sb_hbar_a2_arrow"; \
       } \
       program { name: "sb_hbar_p1_down"; \
           signal: "mouse,down,1"; \
           source: "sb_hbar_p1"; \
           action: DRAG_VAL_PAGE -1.0 0.0; \
           target: "elm.dragable.hbar"; \
       } \
       program { name: "sb_hbar_p2_down"; \
           signal: "mouse,down,1"; \
           source: "sb_hbar_p2"; \
           action: DRAG_VAL_PAGE 1.0 0.0; \
           target: "elm.dragable.hbar"; \
       } \
       program { name: "disable"; \
           signal: "elm,state,disabled"; \
           source: "elm"; \
           action: STATE_SET "disabled" 0.0; \
           target: "disabler"; \
       } \
       program { name: "enable"; \
           signal: "elm,state,enabled"; \
           source: "elm"; \
           action: STATE_SET "default" 0.0; \
           target: "disabler"; \
       } \
   } \

group { name: "elm/scroller/base/dialog";     // dialog text scroller
   alias: "elm/list/base/dialog";             // dialog lists
   alias: "elm/list/base/image_list";         // dialog lists (poster/fanart)
   alias: "elm/genlist/base/browser";         // browser genlist
   alias: "elm/gengrid/base/browser";         // browser gengrid
   alias: "elm/scroller/entry/scrolledentry"; // EmcScrolledEntry

   data {
      item: "focus_highlight" "off";
   }

   images {
      // image: "shelf_inset.png" COMP;
      // image: "sl_bt2_2.png" COMP;
   }

   parts {
      part { name: "bg";
          type: RECT;
          mouse_events: 0;
          description { state: "default" 0.0;
              rel1.offset: 1 1;
              rel2.offset: -2 -2;
              color: 255 255 255 0;
          }
      }
      part { name: "clipper";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel2 {
               to_x: "sb_vbar";
               to_y: "sb_hbar";
               relative: 0.0 0.0;
               offset: -1 -1;
            }
         }
      }
      // part { name: "conf_over";
         // mouse_events: 0;
         // description { state: "default" 0.0;
            // image {
               // normal: "shelf_inset.png";
               // border: 7 7 7 7;
               // middle: 0;
            // }
            // fill.smooth: 0;
         // }
      // }
      // part { name: "focus_highlight";
         // mouse_events: 0;
         // description { state: "default" 0.0;
            // rel1.offset: -1 -1;
            // rel2.offset: 0 0;
            // image {
               // normal: "sl_bt2_2.png";
               // border: 7 7 7 7;
               // middle: 0;
            // }
            // fill.smooth: 0;
            // color: 200 155 0 0;
         // }
         // description { state: "enabled" 0.0;
            // inherit: "default" 0.0;
            // color: 200 155 0 255;
         // }
      // }
      SCROLLBARS_ADD()
  }
}

//// MAINMENU LISTS ///////////////////////////////////////////////////////////
group { name: "elm/list/base/mainmenu";         // Scroller for horizontal list
   parts {
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
         }
      }
   }
}
group { name: "elm/list/base/mainmenu_sublist"; // Scroller for subitems list
   parts {
      part { name: "clipper";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.relative: -1.0 0.0;
            rel2.relative: 5.0 1.0;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
         }
      }
   }
}
group { name: "elm/list/h_item/mainmenu";       // Main horizontal list item
   alias: "elm/list/h_item_odd/mainmenu";

   data.item: "selectraise" "on";
   data.item: "focusraise" "on";
   
   parts {
      /* part { name: "dbg.whole_item"; // just for debug
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 100 50;
            rel1.to: "base";
            rel2.to: "base";
         }
      } */
      /* part { name: "dbg.icon_container"; // just for debug
         type: RECT;
         description { state: "default" 0.0;
            color: 0 100 0 50;
            rel1.to: "icon_container";
            rel2.to: "icon_container";
         }
      } */
      part { name: "base";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: 128 128;
         }
      }
      part { name: "elm.text"; /* API */
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         effect: GLOW;
         description { state: "default" 0.0;
            visible: 0;
            color: FONT_COLOR;
            color2: FONT_COLOR3;
            color3: FONT_COLOR3;
            rel1.relative: 0.0 -1.0;
            rel2.relative: 1.0 0.0;
            text {
               font: FONT;
               size: FONT_SIZE_BIGGER;
               ellipsis: -1;
               align: 0.5 1.0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "icon_container";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            FIXED_SIZE(128, 128)
            align: 0.5 0.0;
         }
      }
      part { name: "elm.swallow.icon"; /* API */
         type: SWALLOW;
         mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            rel1.to: "icon_container";
            rel2.to: "icon_container";
            rel1.relative: 0.15 0.15;
            rel2.relative: 0.85 0.85;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "sublist_clip";
         type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 0;
            rel1.relative: -1.0 0.0;
            rel2.relative: 5.0 1.0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "elm.swallow.end"; /* API */
         type: SWALLOW;
         clip_to: "sublist_clip";
         description { state: "default" 0.0;
            rel1.to: "icon_container";
            rel1.relative: 0.0 1.0;
            rel2.to: "base";
         }
      }
      program { signal: "elm,state,selected"; source: "elm"; /* API */
         action: STATE_SET "selected" 0.0;
         target: "elm.text";
         after: "selected2";
      }
      program { name: "selected2";
         action: STATE_SET "selected" 0.0;
         transition: LINEAR 0.2 CURRENT;
         target: "elm.swallow.icon";
         target: "sublist_clip";
      }
      program { signal: "elm,state,unselected"; source: "elm"; /* API */
         action: STATE_SET "default" 0.0;
         target: "elm.text";
         after: "unselected2";
      }
      program { name: "unselected2";
         action: STATE_SET "default" 0.0;
         transition: LINEAR 0.2 CURRENT;
         target: "elm.swallow.icon";
         target: "sublist_clip";
      }
   }
}
group { name: "elm/list/item/mainmenu_sublist"; // Sub vertical list item
   alias: "elm/list/item_odd/mainmenu_sublist";
   data.item: "stacking" "above";
   images {
      image: "menu_bg_submenu.png" COMP;
      image: "shine.png" COMP;
   }
   parts {
      part { name: "event";
         type: RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "bg";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            rel1 {
               offset: -5 0;
            }
            rel2 {
               offset: 6 -1;
            }
            image {
               normal: "menu_bg_submenu.png";
               border: 0 0 1 1;
            }
            image.middle: NONE;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.icon"; /* API */
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.5 0.5;
         }
      }
      part { name: "elm.swallow.end"; /* API */
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            rel1 {
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
      part { name: "elm.text"; /* API */
         type: TEXT;
         effect: SOFT_SHADOW;
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            color: FONT_COLOR;
            color3: FONT_COLOR3;
            text {
               font: FONT;
               size: FONT_SIZE_BIG;
               min: 1 1;
               ellipsis: -1;
               align: 0.0 0.5;
            }
         }
      }
      part { name: "shine";
            description { state: "default" 0.0;
               visible: 0;
               FIXED_SIZE(69, 5)
               rel1 {
                  to: "bg";
               }
               rel2 {
                  to: "bg";
                  relative: 1.0 0.0;
               }
               image.normal: "shine.png";
            }
            description { state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
   }
   programs {
      program { name: "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "shine";
      }
      program { name: "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "shine";
      }
   }
}

//// DIALOG LIST (big image without label) (elm/list/item/default) ////////////
group { name: "elm/list/item/image_list";
   alias: "elm/list/item_odd/image_list";
   alias: "elm/list/h_item/image_list";
   alias: "elm/list/h_item_odd/image_list";
   data.item: "stacking" "above";
   images {
      image: "bt_sm_base1.png" COMP;
      image: "bt_sm_shine.png" COMP;
   }
   parts {
      part { name: "event";
         type: RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "sel_base";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            min: 300 300;
            color: 255 255 255 0;
            image {
               normal: "bt_sm_base1.png";
               border: 3 3 4 5;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 150;
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 0.5 0.5;
            rel1.offset: 10 10;
            rel2.offset: -11 -11;
         }
      }
      part { name: "sel_shine";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "sel_base";
            rel2.to: "sel_base";
            rel1.offset: -2 0;
            rel2.offset: 2 0;
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }
   }
   programs {
      program {
         name: "go_active";
         signal: "elm,state,selected";
         source: "elm";
         action: STATE_SET "selected" 0.0;
         target: "sel_base";
         target: "sel_shine";
      }
      program {
         name: "go_passive";
         signal: "elm,state,unselected";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "sel_base";
         target: "sel_shine";
      }
   }
}

//// DIALOG LISTS (icon + text) (elm/list/item/default) ///////////////////////
group { name: "elm/list/item/default";
   data.item: "selectraise" "on";
   images {
      image: "vgrad_med_dark.png" COMP;
      image: "shadow_rounded_horiz.png" COMP;
      image: "shine.png" COMP;
      image: "bevel_curved_horiz_out.png" COMP;
      image: "bevel_horiz_out.png" COMP;
   }
   parts {
      part { name: "event";
         type: RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "base";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 64 64 64 255;
         }
      }
      part { name: "bevel";
         mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "bevel_curved_horiz_out.png";
            image.border: 0 0 2 2;
            image.middle: 0;
            fill.smooth: 0;
         }
      }
      part { name: "sel_shadow";
         mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "shadow_rounded_horiz.png";
            image.border: 0 0 9 9;
            rel1.offset: 0 -4;
            rel2.offset: -1 5;
            fill.smooth: 0;
            visible: 0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "sel_base";
         mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "vgrad_med_dark.png";
            fill {
               smooth: 0;
               size {
                  relative: 0.0 1.0;
                  offset: 120 0;
               }
            }
            visible: 0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "sel_bevel"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "bevel_horiz_out.png";
            image.border: 0 0 2 2;
            image.middle: 0;
            fill.smooth: 0;
            visible: 0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.icon";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               relative: 0.0  0.0;
               offset:   4    4;
            }
            rel2 {
               relative: 0.0  1.0;
               offset:   4   -5;
            }
         }
      }
      part { name: "elm.swallow.end";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            rel1 {
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
      part { name: "elm.text";
         clip_to: "disclip";
         type:           TEXT;
         effect:         SOFT_SHADOW;
         mouse_events:   0;
         scale: 1;
         description {
            state: "default" 0.0;
            rel1 {
               to_x:     "elm.swallow.icon";
               relative: 1.0  0.0;
               offset:   4 4;
            }
            rel2 {
               to_x:     "elm.swallow.end";
               relative: 0.0  1.0;
               offset:   -1 -5;
            }
            color: 0 0 0 255;
            color3: 0 0 0 0;
            text {
               font: FONT;
               size: FONT_SIZE;
               min: 0 1;
               align: 0.0 0.5;
               text_class: "list_item";
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 224 224 224 255;
            color3: 0 0 0 64;
         }
      }
      part { name: "sel_shine";
         mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "shine.png";
            rel1.offset: 0 -2;
            rel1.to: "sel_base";
            rel2.relative: 1.0 0.0;
            rel2.offset: -1 2;
            rel2.to: "sel_base";
            min: 69 5;
            max: 69 5;
            fixed: 1 1;
            visible: 0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "sel_base";
            rel2.to: "sel_base";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
   }
   programs {
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "sel_base";
         target:  "sel_shine";
         target:  "sel_bevel";
         target:  "sel_shadow";
         target:  "elm.text";
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "sel_base";
         target:  "sel_shine";
         target:  "sel_bevel";
         target:  "sel_shadow";
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
      program {
         name:    "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program {
         name:    "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
   }
}
group { name: "elm/list/item_odd/default";
   inherit: "elm/list/item/default";
   parts {
      part { name: "base";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 56 56 56 255;
         }
      }
   }
}

//// BROWSER GENLIST ITEM FULL (elm/genlist/item_compress/full/default) ///////
group { name: "elm/genlist/item_compress/full/browser";
   data.item: "selectraise" "on";
   data.item: "contents" "elm.swallow.content";
   // data.item: "treesize" 20;
   // data.item: "flips" "elm.text.flip";
   images {
      image: "list_item_sel_bg.png" COMP;
      image: "list_item_sel_fg.png" COMP;
      image: "separator.png" COMP;
   }
   parts {
      part { name: "event";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "sep";
         type: IMAGE;
         description { state: "default" 0.0;
            max: 99999 2;
            align: 0.5 1.0;
            image.normal: "separator.png";
         }
      }
      part { name: "bg";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 100;
            image {
               normal: "list_item_sel_bg.png";
               border: 0 0 1 1;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            min: 200 42;
         }
      }
      part { name: "fg";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 100;
            rel1.to: "bg";
            rel2.to: "bg";
            rel2.relative: 1.0 0.5;
            image {
               normal: "list_item_sel_fg.png";
               border: 0 0 1 1;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
   }
   programs {
      program { name:"go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "fg";
      }
      program { name:"go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "fg";
         transition: LINEAR 0.1;
      }
      program { name:"go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program { name:"go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
   }
}

//// BROWSER FULL ITEM SLIDE LABEL (elm/label/base/slide_short) ///////////////
group { name: "elm/label/base/slide_short/browser";
   script {
      public g_duration, g_stopslide, g_timer_id, g_anim_id;

      public message(Msg_Type:type, id, ...) {
         if ((type == MSG_FLOAT_SET) && (id == 0)) {
            new Float:duration;
            duration = getfarg(2);
            set_float(g_duration, duration);
         }
      }
      public slide_to_end_anim(val, Float:pos) {
         new stopflag;
         new id;
         stopflag = get_int(g_stopslide);
         if (stopflag == 1) return;
         set_tween_state(PART:"elm.text", pos, "slide_begin", 0.0, "slide_end", 0.0);
         if (pos >= 1.0) {
            id = timer(0.5, "slide_to_begin", 1);
            set_int(g_timer_id, id);
         }
      }
      public slide_to_end() {
         new stopflag;
         new id;
         new Float:duration;
         stopflag = get_int(g_stopslide);
         if (stopflag == 1) return;
         duration = get_float(g_duration);
         id = anim(duration, "slide_to_end_anim", 1);
         set_int(g_anim_id, id);
      }
      public slide_to_begin() {
         new stopflag;
         new id;
         stopflag = get_int(g_stopslide);
         if (stopflag == 1) return;
         set_state(PART:"elm.text", "slide_begin", 0.0);
         id = timer(0.5, "slide_to_end", 1);
         set_int(g_timer_id, id);
      }
      public start_slide() {
         set_int(g_stopslide, 0);
         set_state(PART:"elm.text", "slide_begin", 0.0);
         slide_to_end();
      }
      public stop_slide() {
         new id;
         set_int(g_stopslide, 1);
         id = get_int(g_anim_id);
         cancel_anim(id);
         id = get_int(g_timer_id);
         cancel_timer(id);
         set_state(PART:"elm.text", "default", 0.0);
      }
   }
   parts {
      part { name: "label.text.clip"; type: RECT;
         description { state: "default" 0.0;
         }
      }
      part { name: "elm.text"; type: TEXTBLOCK;
         scale: 1;
         clip_to: "label.text.clip";
         description { state: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
            align: 0.0 0.0;
            text {
               // style: "label_style";
               style: "epymc_label_slide_style";
               min: 0 1;
               ellipsis: -1;
            }
         }
         description { state: "slide_end" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            align: 1.0 0.0;
            text {
               // style: "label_style";
               style: "epymc_label_slide_style";
               min: 1 1;
               ellipsis: -1;
            }
         }
         description { state: "slide_begin" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 1.0;
            align: 0.0 0.0;
            text {
               // style: "label_style";
               style: "epymc_label_slide_style";
               min: 1 1;
            }
         }
      }
   }
   programs {
      program { name: "start_slide";
         signal: "elm,state,slide,start"; source: "elm";
         script {
            start_slide();
         }
      }
      program { name: "stop_slide";
         signal: "elm,state,slide,stop"; source: "elm";
         script {
            stop_slide();
         }
      }
   }
}

//// BROWSER GENGRID ITEM (elm/gengrid/item/default/default) //////////////////
group { name: "elm/gengrid/item/default/browser";
   data.item: "texts" "elm.text";
   data.item: "contents" "elm.swallow.icon elm.swallow.end";
   images {
      image: "bt_sm_base1.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
   }
   parts {
      part { name: "event";
         type: RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "bg";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1 {
               relative: 0.0 0.0;
               offset: -5 -5;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 4 4;
            }
            image {
               normal: "bt_sm_base1.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
            rel1 {
               relative: 0.0 0.0;
               offset: -2 -2;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 1 1;
            }
         }
      }
      part { name: "elm.swallow.pad";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               relative: 0.0  1.0;
               offset:   0    -10;
            }
            rel2 {
     to_y: "elm.text";
               relative: 0.0  0.0;
               offset:   -1   -1;
            }
         }
      }
      part { name: "elm.swallow.icon";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.5 0.5;
            rel1 {
               relative: 0.0  0.0;
               offset:   -1    4;
            }
            rel2 {
               to_y: "elm.swallow.pad";
               relative: 1.0  0.0;
               offset:   -1   -5;
            }
         }
      }
      part { name: "elm.swallow.end";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            aspect: 1.0 1.0;
            aspect_preference: HORIZONTAL;
            rel1.relative: 0.5 0.5;

         }
      }
      part { name: "elm.text";
         clip_to: "disclip";
         type: TEXT;
         effect: SOFT_SHADOW;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               relative: 0.0  1.0;
               offset: 0 0;
            }
            rel2 {
               relative: 1.0  1.0;
               offset: 0 -20;
            }
            color: FONT_COLOR;
            color3: 0 0 0 0;
            text {
               font: FONT;
               size: FONT_SIZE;
               min: 0 1;
               align: 0.5 0.0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: FONT_COLOR;
            color3: FONT_COLOR3;
         }
      }
      part { name: "fg1";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.relative: 1.0 0.5;
            rel2.to: "bg";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
      part { name: "fg2";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
   }
   programs {
      // signal: elm,state,%s,active
      //   a "check" item named %s went active
      // signal: elm,state,%s,passive
      //   a "check" item named %s went passive
      // default is passive
      program { name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
      }
      program { name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
      program { name:    "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program { name:    "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
   }
}

//// SCROLLED ENTRY (elm/entry/base-noedit/default) ////////////////////
group { name: "elm/entry/base-noedit/scrolledentry";
   parts {
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: PLAIN;
         select_mode: EXPLICIT;
         multiline: 1;
         source: "elm/entry/selection/emc"; // selection under
         source5: "elm/entry/anchor/emc"; // anchor under
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "epymc_default_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
   }
}

group { name: "elm/entry/selection/emc";
   parts {
      part { name: "bg";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 128 128 128 128;
         }
      }
   }
}
group { name: "elm/entry/anchor/emc";
   parts {
      part { name: "bg";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 128 0 0 64;
         }
      }
   }
}

//// MENU (elm/menu/item/default) /////////////////////////////////////////////
group { name: "elm/menu/item/emc";
   images.image: "vgrad_med_dark.png" COMP;
   images.image: "bevel_horiz_out.png" COMP;
   images.image: "shadow_rounded_horiz.png" COMP;
   images.image: "shine.png" COMP;
   script {
      public menu_text_visible; //0:hide (default), 1:visible
      public menu_disable; //0:enable, 1:disable
   }
   parts {
      part { name: "shadow"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "shadow_rounded_horiz.png";
            image.border: 0 0 9 9;
            rel1.offset: 0 -4;
            rel2.offset: -1 5;
            fill.smooth: 0;
            visible: 0;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
         }
      }
      part { name: "base"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "vgrad_med_dark.png";
            fill.smooth: 0;
            TILED_HORIZ(120)
            visible: 0;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW; mouse_events:  0;
         clip_to: "disabler";
         scale: 1;
         description { state: "default" 0.0;
            min: 32 32;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1.offset: 3 3;
            rel2.offset: 3 -5;
            rel2.relative: 0.0 1.0;
         }
         description { state: "noicon" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      // XXX: check/radio goes next (right of) content, no radio/check handle
      // XXX: need to handle no text?
      // XXX: need arrowspace on/off based on submenus in menu
      part { name: "arrowspace"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 15 15;
            max: 15 15;
            rel1.offset: -2 0;
            rel1.relative: 1.0 0.0;
            rel2.offset: -2 -1;
            align: 1.0 0.5;
         }
      }
      part { name: "elm.text"; type: TEXT; mouse_events:  0;
         // effect: SHADOW BOTTOM;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "elm.swallow.content";
            rel1.relative: 1.0 0.0;
            rel1.offset: 5 -1;
            rel2.to_x: "arrowspace";
            rel2.offset: -6 -1;
            rel2.relative: 0.0 1.0;
            //color: FN_COL_DEFAULT;
            color: 0 0 0 255;
            text { font: FONT; size: FONT_SIZE;
               min: 1 1;
               ellipsis: -1;
               align: 0.0 0.5;
               text_class: "menu_item";
            }
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
      part { name: "label2"; type: TEXT; mouse_events: 0;
         // effect: SHADOW BOTTOM;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            //color: FN_COL_DISABLE;
            color: 0 0 0 255;
            color_class: "menu_item_disabled";
            text { font: FONT; size: FONT_SIZE;
               text_source: "elm.text";
               align: 0.0 0.5;
               text_class: "menu_item";
            }
            visible: 0;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "label3"; type: TEXT; mouse_events: 0;
         // effect: GLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.offset: -2 -3;
            rel1.to: "elm.text";
            rel2.offset: 2 1;
            rel2.to: "elm.text";
            //color: FN_COL_HIGHLIGHT;
            color: FONT_COLOR;
            color_class: "menu_item_active";
            text { font: FONT; size: FONT_SIZE;
               text_source: "elm.text";
               align: 0.0 0.5;
               text_class: "menu_item";
            }
            visible: 0;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "bevel"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "bevel_horiz_out.png";
            image.border: 0 0 2 2;
            image.middle: 0;
            fill.smooth: 0;
            visible: 0;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
         }
      }
      part { name: "shine";
         repeat_events: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel1.offset: 0 -2;
            rel2.to: "base";
            rel2.relative: 1.0 0.0;
            rel2.offset: -1 2;
            image.normal: "shine.png";
            visible: 0;
            FIXED_SIZE(69, 5)
         }
         description { state: "active" 0.0;
            inherit:  "default" 0.0;
            visible: 1;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
         }
      }
      part { name: "event"; type: RECT;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            color: 255 255 255 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "disabler"; type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 128;
         }
      }
   }
   programs {
      program {
         signal: "mouse,in"; source: "event";
         action: SIGNAL_EMIT "elm,action,activate" "elm";
         after: "selected";
      }
      program {
         signal: "mouse,out"; source: "event";
//         action: SIGNAL_EMIT "elm,action,inactivate" "elm";
         after: "unselected";
      }
      program { signal: "mouse,down,1"; source: "event";
         after: "selected";
      }
      program {
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible"; source: "elm";
         script {
            set_int(menu_text_visible, 1);
//            set_state(PART:"elm.text", "active", 0.0);
//            set_state(PART:"elm.text2", "active", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden"; source: "elm";
         script {
            set_int(menu_text_visible, 0);
//            set_state(PART:"elm.text", "default", 0.0);
//            set_state(PART:"elm.text2", "default", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden"; source: "elm";
         action: STATE_SET "noicon" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "selected";
         signal: "elm,state,selected"; source: "elm";
         action: STATE_SET "active" 0.0;
         target: "shadow";
         target: "base";
         target: "bevel";
         target: "shine";
         target: "elm.text";
         target: "label2";
         target: "label3";
      }
      program { name: "unselected";
         signal: "elm,state,unselected"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "shadow";
         target: "base";
         target: "bevel";
         target: "shine";
         target: "elm.text";
         target: "label2";
         target: "label3";
      }
      program {
         signal: "elm,state,enabled"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "shadow";
         target: "base";
         target: "bevel";
         target: "shine";
         target: "event";
         target: "disabler";
         target: "elm.text";
         target: "label2";
         target: "label3";
      }
      program {
         signal: "elm,state,disabled"; source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "shadow";
         target: "base";
         target: "bevel";
         target: "shine";
         target: "event";
         target: "disabler";
         target: "elm.text";
         target: "label2";
         target: "label3";
      }
   }
}
group { name: "elm/menu/separator/emc";
   images {
      image: "separator_horiz.png" COMP;
   }
   parts {
      part { name: "separator";
         description { state: "default" 0.0;
            min: 2 2;
            rel1.offset: 0 2;
            rel2.offset: -1 -3;
            image.normal: "separator_horiz.png";
            fill.smooth: 0;
         }
      }
   }
}
group { name: "elm/hover/base/menu/emc";
   images {
      image: "vgrad_med_lighter.png" COMP;
      image: "bevel_out.png" COMP;
      image: "shine.png" COMP;
      image: "win_shadow.png" COMP;
   }
   parts {
      part { name: "elm.swallow.offset"; type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 0.0;
         }
      }
      part { name: "elm.swallow.size"; type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1.to: "elm.swallow.offset";
            rel1.relative: 1.0 1.0;
            rel2.to: "elm.swallow.offset";
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "base"; type: RECT; repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "elm.swallow.slot.left"; type: SWALLOW;
         description { state: "default" 0.0;
         }
      }
      part { name: "elm.swallow.slot.right"; type: SWALLOW;
         description { state: "default" 0.0;
         }
      }
      part { name: "elm.swallow.slot.top"; type: SWALLOW;
         description { state: "default" 0.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "bottomclip"; type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "shadow";
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            image.normal: "win_shadow.png";
            image.border: 14 14 14 14;
            image.middle: 0;
            rel1.to: "bottom";
            rel1.offset: -7  -3;
            rel2.to: "bottom";
            rel2.offset: 6 11;
            fill.smooth: 0;
         }
      }
      part { name: "top";
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            image.normal: "vgrad_med_lighter.png";
            rel1.to: "bottom";
            rel2.to_x: "bottom";
            rel2.to_y: "shine";
            rel2.offset: -1 0;
            min: 0 23;
            align: 0.0 0.0;
            fill.smooth: 0;
            TILED_HORIZ(120)
            fixed: 0 1;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "bg"; type: RECT; mouse_events: 0;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            rel1.to_x: "bottom";
            rel1.to_y: "top";
            rel1.relative: 0.0 1.0;
            rel2.to: "bottom";
            color: 64 64 64 255;
         }
      }

      part { name: "bottom";
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.slot.bottom";
            rel1.offset: 0 -5;
            rel2.to: "elm.swallow.slot.bottom";
            rel2.offset: -1 4;
            image.normal: "bevel_out.png";
            image.border: 1 1 1 1;
            image.middle: 0;
            fill.smooth: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "elm.swallow.slot.bottom"; type: SWALLOW;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            align: 0.5 0.0;
            rel1.to: "elm.swallow.slot.middle";
            rel1.relative: 0.0 1.0;
            rel1.offset: 0 0;
            rel2.to: "elm.swallow.slot.middle";
            rel2.relative: 1.0 1.0;
            rel2.offset: -1 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "bevel"; mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "bottom";
            rel2.to: "bottom";
            image.normal: "bevel_out.png";
            image.border: 1 1 1 1;
            image.middle: 0;
            fill.smooth: 0;
         }
      }
      part { name: "shine"; mouse_events: 1;
         repeat_events:1;
         description { state: "default" 0.0;
            rel1.to: "bottom";
            rel1.offset: 0 -2;
            rel2.to: "bottom";
            rel2.relative: 1.0 0.0;
            rel2.offset: -1 2;
            image.normal: "shine.png";
            FIXED_SIZE(69, 5)
         }
      }
      part { name: "elm.swallow.slot.middle"; type: SWALLOW;
         repeat_events:1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.size";
            rel2.to: "elm.swallow.size";
         }
      }
   }
   programs {
      program { name: "end";
         signal: "mouse,up,1"; source: "base";
         action: SIGNAL_EMIT "elm,action,dismiss" "elm";
      }
      program { name: "bottomshow";
         signal: "elm,action,slot,bottom,show"; source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.5;
         target: "bottomclip";
         target: "bottom";
         target: "elm.swallow.slot.bottom";
      }
      program { name: "bottomhide";
         signal: "elm,action,slot,bottom,hide"; source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "bottomclip";
         target: "bottom";
         target: "elm.swallow.slot.bottom";
      }
   }
}

//// VKEYBOARD ENTRY (elm/entry/base-single/default) //////////////////////////
group { name: "elm/entry/base-single/vkeyboard";
   parts {
      part { name: "elm.text";
         type: TEXTBLOCK;
         entry_mode: EDITABLE;
         cursor_mode: BEFORE;
         multiline: 0;
         // source: "elm/entry/selection/emc"; // selection under
         source4: "elm/entry/cursor/vkeyboard"; // cursorover
         description { state: "default" 0.0;
            text {
               style: "epymc_default_style";
               min: 1 1;
               ellipsis: -1;
               align: 0.0 0.5;
            }
         }
      }
   }
}
group { name: "elm/entry/cursor/vkeyboard";
   parts {
      part { name: "cursor"; type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 0;
         }
         description { state: "visible" 0.0;
            color: 255 255 255 255;
         }
      }
   }
   programs {
      program { name: "pulse1";
         signal: "load";
         source: "";
         action: STATE_SET "visible" 0.0;
         transition: LINEAR 0.5;
         target: "cursor";
         after: "pulse2";
      }
      program { name: "pulse2";
         in: 1.0 0.0;
         action: STATE_SET "default" 0.0;
         transition: LINEAR 0.5;
         target: "cursor";
         after: "pulse1";
      }
   }
}

//// BUTTONS (elm/button/base/default) ////////////////////////////////////////
group { name: "elm/button/base/emc";
   images {
      image: "button_normal.png" COMP;
      image: "button_clicked.png" COMP;
   }
#define ICON     1
#define LABEL    2
#define MASK     3
#define DISABLE  4
   script {
      public btmode;
      public eval_mode(m) {
         new m1 = m & MASK;
         new d = m & DISABLE;
         if (m1 == (ICON | LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
               set_state(PART:"elm.text", "visible", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
               set_state(PART:"elm.text", "disabled_visible", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         } else if (m1 == (ICON)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         } else if (m1 == (LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "textonly", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "disabled_textonly", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         } else {
            set_state(PART:"elm.swallow.content", "default", 0.0);
            set_state(PART:"sizer.content", "default", 0.0);
            set_state(PART:"elm.text", "default", 0.0);
            set_state(PART:"icon_clip", "default", 0.0);
            set_state(PART:"event", "default", 0.0);
         }
      }
   }
   parts {
      part { name: "base"; mouse_events: 1;
         description { state: "default" 0.0;
            min: 50 35;
            image.normal: "button_normal.png";
            image.border: 4 4 3 5;
            image.middle: SOLID;
            rel1.offset: -1 0;
            rel2.offset: 0 1;
            fill.smooth: 0;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "button_clicked.png";
            image.border: 5 5 4 6;
         }
      }
      part { name: "icon_clip"; type: RECT;
         description { state: "default" 0.0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 128;
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW; mouse_events: 0;
         clip_to: "icon_clip";
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1.offset: 6 5;
            rel1.to: "base";
            rel2.relative: 0.0 1.0;
            rel2.offset: 6 -8;
            rel2.to: "base";
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 0;
            aspect: 1.0 1.0;
            visible: 1;
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
            fixed: 0 0;
            align: 0.5 0.5;
            rel2.relative: 1.0 1.0;
            rel2.offset: -7 -8;
            visible: 1;
         }
      }
      part { name: "sizer.content"; type: TEXT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
//            fixed: 1 1;
            visible: 0;
            text { font: FONT; size: FONT_SIZE;
               min: 0 0;
               text_class: "button_text";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
      }
      part { name: "elm.text"; type: TEXT; mouse_events: 0;
         effect: SHADOW BOTTOM;
         scale: 1;
         description { state: "default" 0.0;
            rel1.offset: 0 5;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "elm.swallow.content";
            rel1.to_y: "base";
            rel2.offset: -8 -8;
            rel2.to: "base";
            color_class: "button_text";
            color: FONT_COLOR;
            color3: FONT_COLOR3;
            text { font: "Asap"; size: FONT_SIZE;
               align: 0.5 0.5;
               min: 0 0;
               text_class: "button";
            }
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            rel1.offset: 2 5;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         description { state: "textonly" 0.0;
            inherit: "default" 0.0;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            rel1.offset: 2 5;
            color_class: "button_text_disabled";
            color: FONT_COLOR_NOSEL;
            color3: FONT_COLOR3_NOSEL;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         description { state: "disabled_textonly" 0.0;
            inherit: "default" 0.0;
            color_class: "button_text_disabled";
            color: FONT_COLOR_NOSEL;
            color3: FONT_COLOR3_NOSEL;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
      }
      part { name: "event"; type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program {
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,press" "elm";
         after: "button_click_anim";
      }
      program { name: "button_click_anim";
         action: STATE_SET "clicked" 0.0;
         target: "base";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,unpress" "elm";
         after: "button_unclick_anim";
      }
      program { name: "button_unclick_anim";
         action: STATE_SET "default" 0.0;
         target: "base";
      }
      program { name: "buttonactivate";
         signal: "elm,anim,activate"; source: "elm";
         action: STATE_SET "clicked" 0.0;
         target: "base";
         after: "button_unpressed_anim";
      }
      program { name: "button_unpressed_anim";
         action: STATE_SET "default" 0.0;
         in: 0.5 0.0;
         target: "base";
      }
      program {
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
      program { name: "button_text_visible";
         signal: "elm,state,text,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_text_hidden";
         signal: "elm,state,text,hidden"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_icon_visible";
         signal: "elm,state,icon,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_icon_hidden";
         signal: "elm,state,icon,hidden"; source: "elm";
         action:  STATE_SET "default" 0.0;
         script {
            new m = get_int(btmode);
            m &= ~ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_state_disabled";
         signal: "elm,state,disabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_state_enabled";
         signal: "elm,state,enabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
   }
#undef ICON
#undef LABEL
#undef MASK
#undef DISABLE
}

