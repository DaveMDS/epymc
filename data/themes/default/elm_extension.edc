
//// SCROLLER (elm/scroller/base/default) /////////////////////////////////////
group {name: "elm/list/base/mainmenu"; // mainmenu list
   alias: "elm/genlist/base/browser";  // browser genlist
   alias: "elm/gengrid/base/browser";  // browser gengrid
   script {
      public sbvis_v, sbvis_h, sbalways_v, sbalways_h, sbvis_timer;
      public timer0(val) {
         new v;
         v = get_int(sbvis_v);
         if (v) {
            v = get_int(sbalways_v);
            if (!v) {
               emit("do-hide-vbar", "");
               set_int(sbvis_v, 0);
            }
         }
         v = get_int(sbvis_h);
         if (v) {
            v = get_int(sbalways_h);
            if (!v) {
               emit("do-hide-hbar", "");
               set_int(sbvis_h, 0);
            }
         }
         set_int(sbvis_timer, 0);
         return 0;
      }
   }
   images {
      image: "bt_sm_base2.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
      image: "sl_bt2_2.png" COMP;
      image: "sb_runnerh.png" COMP;
      image: "sb_runnerv.png" COMP;
   }
   parts {
      part { name: "bg";
         type: RECT;
         description { state: "default" 0.0;
            rel1.offset: 2 2;
            rel2.offset: -3 -3;
            color: 255 255 255 0;
         }
      }
      part { name: "clipper";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            rel1.offset: 2 2;
            rel2.offset: -3 -3;
         }
      }
      part { name: "elm.swallow.content";
         clip_to: "clipper";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            rel1.offset: 2 2;
            rel2.offset: -3 -3;
         }
      }
      part { name: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_vbar_clip";
         clip_to: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_vbar";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 17 17;
            align: 1.0 0.0;
            rel1 {
               relative: 1.0 0.0;
               offset:   -2 2;
               to_y:     "elm.swallow.content";
            }
            rel2 {
               relative: 1.0 0.0;
               offset:   -2 -1;
               to_y:     "sb_hbar";
            }
         }
      }
      part { name: "sb_vbar_runner";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            min: 3 3;
            max: 3 99999;
            rel1.to:       "sb_vbar";
            rel2.to:       "sb_vbar";
            image {
               normal: "sb_runnerv.png";
               border: 0 0 4 4;
            }
            fill.smooth: 0;
         }
      }
      part { name: "elm.dragable.vbar";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         dragable {
            x: 0 0 0;
            y: 1 1 0;
            confine: "sb_vbar";
         }
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 17 17;
            rel1 {
               relative: 0.5  0.5;
               offset:   0    0;
                to: "sb_vbar";
            }
            rel2 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_vbar";
            }
            image {
               normal: "bt_sm_base2.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
      }
      part { name: "sb_vbar_over1";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.vbar";
            rel2.relative: 1.0 0.5;
            rel2.to: "elm.dragable.vbar";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
      }
      part { name: "sb_vbar_over2";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.vbar";
            rel2.to: "elm.dragable.vbar";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
      }

      part { name: "sb_hbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_hbar_clip";
         clip_to: "sb_hbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_hbar";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 17 17;
            align: 0.0 1.0;
            rel1 {
               relative: 0.0 1.0;
               offset:   2 -2;
               to_x:     "elm.swallow.content";
            }
            rel2 {
               relative: 0.0 1.0;
               offset:   -1 -2;
               to_x:     "sb_vbar";
            }
         }
      }
      part { name: "sb_hbar_runner";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            min: 3 3;
            max: 99999 3;
            rel1.to:       "sb_hbar";
            rel2.to:       "sb_hbar";
            image {
               normal: "sb_runnerh.png";
               border: 4 4 0 0;
            }
            fill.smooth: 0;
         }
      }
      part { name: "elm.dragable.hbar";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         dragable {
            x: 1 1 0;
            y: 0 0 0;
            confine: "sb_hbar";
         }
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 17 17;
            rel1 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_hbar";
            }
            rel2 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_hbar";
            }
            image {
               normal: "bt_sm_base2.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
      }
      part { name: "sb_hbar_over1";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.hbar";
            rel2.relative: 1.0 0.5;
            rel2.to: "elm.dragable.hbar";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
      }
      part { name: "sb_hbar_over2";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
             rel1.to: "elm.dragable.hbar";
             rel2.to: "elm.dragable.hbar";
             image {
                 normal: "bt_sm_shine.png";
                 border: 6 6 6 0;
             }
         }
      }
   }
   programs {
      program { name: "load";
         signal: "load";
         source: "";
         script {
            set_state(PART:"sb_hbar_clip", "hidden", 0.0);
            set_state(PART:"sb_vbar_clip", "hidden", 0.0);
            set_int(sbvis_h, 0);
            set_int(sbvis_v, 0);
            set_int(sbalways_v, 0);
            set_int(sbalways_h, 0);
            set_int(sbvis_timer, 0);
         }
      }
      program { name: "vbar_show";
         signal: "elm,action,show,vbar";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "sb_vbar_clip_master";
      }
      program { name: "vbar_hide";
         signal: "elm,action,hide,vbar";
         source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "sb_vbar_clip_master";
      }
      program { name: "vbar_show_always";
         signal: "elm,action,show_always,vbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_v);
            v |= get_int(sbalways_v);
            if (!v) {
               set_int(sbalways_v, 1);
               emit("do-show-vbar", "");
               set_int(sbvis_v, 1);
            }
         }
      }
      program { name: "vbar_show_notalways";
         signal: "elm,action,show_notalways,vbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbalways_v);
            if (v) {
               set_int(sbalways_v, 0);
               v = get_int(sbvis_v);
               if (!v) {
                  emit("do-hide-vbar", "");
                  set_int(sbvis_v, 0);
               }
            }
         }
      }
      program { name: "sb_vbar_show";
         signal: "do-show-vbar";
         source: "";
         action:  STATE_SET "default" 0.0;
         transition: LINEAR 1.0;
         target: "sb_vbar_clip";
      }
      program { name: "sb_vbar_hide";
         signal: "do-hide-vbar";
         source: "";
         action:  STATE_SET "hidden" 0.0;
         transition: LINEAR 1.0;
         target: "sb_vbar_clip";
      }

      program { name: "hbar_show";
         signal: "elm,action,show,hbar";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "sb_hbar_clip_master";
      }
      program { name: "hbar_hide";
         signal: "elm,action,hide,hbar";
         source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "sb_hbar_clip_master";
      }
      program { name: "hbar_show_always";
         signal: "elm,action,show_always,hbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_h);
            v |= get_int(sbalways_h);
            if (!v) {
               set_int(sbalways_h, 1);
               emit("do-show-hbar", "");
               set_int(sbvis_h, 1);
            }
         }
      }
      program { name: "hbar_show_notalways";
         signal: "elm,action,show_notalways,hbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbalways_h);
            if (v) {
               set_int(sbalways_h, 0);
               v = get_int(sbvis_h);
               if (!v) {
                  emit("do-hide-hbar", "");
                  set_int(sbvis_h, 0);
               }
            }
         }
      }
      program { name: "sb_hbar_show";
         signal: "do-show-hbar";
         source: "";
         action:  STATE_SET "default" 0.0;
         transition: LINEAR 1.0;
         target: "sb_hbar_clip";
      }
      program { name: "sb_hbar_hide";
         signal: "do-hide-hbar";
         source: "";
         action:  STATE_SET "hidden" 0.0;
         transition: LINEAR 1.0;
         target: "sb_hbar_clip";
      }

      program { name: "scroll";
         signal: "elm,action,scroll";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_v);
            v |= get_int(sbalways_v);
            if (!v) {
               emit("do-show-vbar", "");
               set_int(sbvis_v, 1);
            }
            v = get_int(sbvis_h);
            v |= get_int(sbalways_h);
            if (!v) {
               emit("do-show-hbar", "");
               set_int(sbvis_h, 1);
            }
            v = get_int(sbvis_timer);
            if (v > 0) cancel_timer(v);
            v = timer(2.0, "timer0", 0);
            set_int(sbvis_timer, v);
         }
      }
   }
}

//// MAINMENU LIST ITEM (elm/list/item/default) ///////////////////////////////
group { name: "elm/list/item/mainmenu";
   alias: "elm/list/item_odd/mainmenu";
   data.item: "stacking" "above";
   images {
      image: "bt_sm_base1.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
      image: "ilist_1.png" COMP;
      image: "ilist_item_shadow.png" COMP;
   }
   parts {
      part { name: "event";
         type: RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "base_sh";
         mouse_events: 0;
         description {
            state: "default" 0.0;
            align: 0.0 0.0;
            min: 0 10;
            fixed: 1 1;
            rel1 {
               to: "base";
               relative: 0.0 1.0;
               offset: 0 0;
            }
            rel2 {
               to: "base";
               relative: 1.0 1.0;
               offset: -1 0;
            }
            image {
               //~ normal: "ilist_item_shadow.png";
            }
            fill.smooth: 0;
         }
      }
      part { name: "base";
         mouse_events: 0;
         description {
            state: "default" 0.0;
            image {
               //~ normal: "ilist_1.png";
               border: 2 2 2 2;
            }
            fill.smooth: 0;
         }
      }
      part { name: "bg";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1 {
               relative: 0.0 0.0;
               offset: -5 -5;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 4 4;
            }
            image {
               normal: "bt_sm_base1.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
            rel1 {
               relative: 0.0 0.0;
               offset: -2 -2;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 1 1;
            }
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               relative: 0.0  0.0;
               offset:   4    4;
            }
            rel2 {
               relative: 0.0  1.0;
               offset:   4   -5;
            }
         }
      }
      part { name: "elm.swallow.end";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            rel1 {
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
      part { name: "elm.text";
         type:           TEXT;
         effect:         SOFT_SHADOW;
         mouse_events:   0;
         scale: 1;
         description {
            state: "default" 0.0;
//               min: 16 16;
            rel1 {
               to_x:     "elm.swallow.icon";
               relative: 1.0  0.0;
               offset:   4 4;
            }
            rel2 {
               to_x:     "elm.swallow.end";
               relative: 0.0  1.0;
               offset:   -1 -5;
            }
            color: 255 255 255 255;
            color3: 100 100 100 100;
            text {
               font: "Sans";
               size: 35;
               min: 1 1;
//                  min: 0 1;
               align: 0.5 0.5;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 224 224 224 255;
            color3: 0 0 0 64;
         }
      }
      part { name: "fg1";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.relative: 1.0 0.5;
            rel2.to: "bg";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
      part { name: "fg2";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
   }
   programs {
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
   }
}

//// BROWSER GENLIST ITEM (elm/genlist/item/default/default) //////////////////
group { name: "elm/genlist/item/default/browser";
   alias: "elm/genlist/item_odd/default/browser";
   styles {
      style { name: "genlist_style";
         base: "font=Sans font_size=20 align=left valign=1.0 color=#fff";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "hilight" "+ font=Sans:style=Bold";
         tag:  "b" "+ font=Sans:style=Bold";
         tag:  "tab" "\t";
      }
      style { name: "genlist_selected_style";
         base: "font=Sans font_size=20 align=left valign=1.0 color=#fff";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "hilight" "+ font=Sans:style=Bold";
         tag:  "b" "+ font=Sans:style=Bold";
         tag:  "tab" "\t";
      }
   }

   data {
      item: "stacking" "above";
      item: "selectraise" "on";
      item: "labels" "elm.text";
      item: "icons" "elm.swallow.icon elm.swallow.end";
      item: "treesize" "20";
   }

   images {
      image: "bt_sm_base1.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
      image: "ilist_1.png" COMP;
      image: "ilist_item_shadow.png" COMP;
   }

   parts {
      part {
         name: "event";
         type: RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      //~ part {
         //~ name: "base_sh";
         //~ mouse_events: 0;
         //~ description {
            //~ state: "default" 0.0;
            //~ align: 0.0 0.0;
            //~ min: 0 10;
            //~ fixed: 1 1;
            //~ rel1 {
               //~ to: "base";
               //~ relative: 0.0 1.0;
               //~ offset: 0 0;
            //~ }
            //~ rel2 {
               //~ to: "base";
               //~ relative: 1.0 1.0;
               //~ offset: -1 0;
            //~ }
            //~ image {
               //~ normal: "ilist_item_shadow.png";
            //~ }
            //~ fill.smooth: 0;
         //~ }
      //~ }
      part {
         name: "base";
         type: RECT;
         mouse_events: 0;
         description {
            state: "default" 0.0;
            min: 16 28;
            color: 0 0 0 0;
            //~ image {
               //~ normal: "ilist_1.png";
               //~ border: 2 2 2 2;
            //~ }
            //~ fill.smooth: 0;
         }
      }
      part { name: "bg";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1 {
               relative: 0.0 0.0;
               offset: -5 -5;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 4 4;
            }
            image {
               normal: "bt_sm_base1.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
            rel1 {
               relative: 0.0 0.0;
               offset: -2 -2;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 1 1;
            }
         }
      }
      part { name: "elm.swallow.pad";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               relative: 0.0  0.0;
               offset:   4    4;
            }
            rel2 {
               relative: 0.0  1.0;
               offset:   4   -5;
            }
         }
      }
      part { name: "elm.swallow.icon";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               to_x: "elm.swallow.pad";
               relative: 1.0  0.0;
               offset:   -1    4;
            }
            rel2 {
               to_x: "elm.swallow.pad";
               relative: 1.0  1.0;
               offset:   -1   -5;
            }
         }
      }
      part { name: "elm.swallow.end";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel1 {
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
      part { name: "elm.text";
         clip_to: "disclip";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description {
            state: "default" 0.0;
            align: 0.0 0.5;
            fixed: 0 1;
            rel1 {
               to_x: "elm.swallow.icon";
               to_y: "base";
               relative: 1.0  0.5;
               offset:   4 4;
            }
            rel2 {
               to_x: "elm.swallow.end";
               to_y: "base";
               relative: 0.0  0.5;
               offset:   -1 -5;
            }
            text {
               style: "genlist_style";
               min: 1 1;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            text {
               style: "genlist_selected_style";
            }
         }
      }
      part { name: "fg1";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.relative: 1.0 0.5;
            rel2.to: "bg";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
      part { name: "fg2";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
   }
   programs {
      // signal: elm,state,%s,active
      //   a "check" item named %s went active
      // signal: elm,state,%s,passive
      //   a "check" item named %s went passive
      // default is passive
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
      program {
         name:    "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program {
         name:    "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
   }
}
//// BROWSER GENLIST ITEM COMP (elm/genlist/item_compress/default/default) ////
group { name: "elm/genlist/item_compress/default/browser";
   alias: "elm/genlist/item_compress_odd/default/browser";
   data.item: "stacking" "above";
   data.item: "selectraise" "on";
   data.item: "labels" "elm.text";
   data.item: "icons" "elm.swallow.icon elm.swallow.end";
   data.item: "treesize" "20";
// data.item: "states" "";
   images {
      image: "bt_sm_base1.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
      image: "ilist_1.png" COMP;
      image: "ilist_item_shadow.png" COMP;
   }
   parts {
      part { name: "event";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "bg";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1 {
               relative: 0.0 0.0;
               offset: -5 -5;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 4 4;
            }
            image {
               normal: "bt_sm_base1.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
            rel1 {
               relative: 0.0 0.0;
               offset: -2 -2;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 1 1;
            }
         }
      }
      part { name: "elm.swallow.pad";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               relative: 0.0  0.0;
               offset:   4    4;
            }
            rel2 {
               relative: 0.0  1.0;
               offset:   4   -5;
            }
         }
      }
      part { name: "elm.swallow.icon";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               to_x: "elm.swallow.pad";
               relative: 1.0  0.0;
               offset:   -1    4;
            }
            rel2 {
               to_x: "elm.swallow.pad";
               relative: 1.0  1.0;
               offset:   -1   -5;
            }
         }
      }
      part { name: "elm.swallow.end";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            rel1 {
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
      part { name: "elm.text";
         clip_to: "disclip";
         type:           TEXT;
         effect:         SOFT_SHADOW;
         mouse_events:   0;
         scale: 1;
         description { state: "default" 0.0;
//          min: 16 16;
            rel1 {
               to_x:     "elm.swallow.icon";
               relative: 1.0  0.0;
               offset:   0 4;
            }
            rel2 {
               to_x:     "elm.swallow.end";
               relative: 0.0  1.0;
               offset:   -1 -5;
            }
            color: 100 100 100 255;
            color3: 0 0 0 24;
            text {
               font: FONT;
               size: (FONT_SIZE + 8);
               min: 0 1;
//             min: 1 1;
               align: 0.0 0.5;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 224 224 224 255;
            color3: 0 0 0 64;
         }
      }
      part { name: "fg1";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.relative: 1.0 0.5;
            rel2.to: "bg";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
      part { name: "fg2";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
   }
   programs {
      // signal: elm,state,%s,active
      //   a "check" item named %s went active
      // signal: elm,state,%s,passive
      //   a "check" item named %s went passive
      // default is passive
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
      program {
         name:    "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program {
         name:    "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
   }
}

//// BROWSER GENGRID ITEM (elm/gengrid/item/default/default) //////////////////
group { name: "elm/gengrid/item/default/browser";
   data.item: "labels" "elm.text";
   data.item: "icons" "elm.swallow.icon elm.swallow.end";
   images {
      image: "bt_sm_base1.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
      image: "ilist_1.png" COMP;
      image: "ilist_item_shadow.png" COMP;
   }
   parts {
      part { name: "event";
         type: RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "bg";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1 {
               relative: 0.0 0.0;
               offset: -5 -5;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 4 4;
            }
            image {
               normal: "bt_sm_base1.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
            rel1 {
               relative: 0.0 0.0;
               offset: -2 -2;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 1 1;
            }
         }
      }
      part { name: "elm.swallow.pad";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               relative: 0.0  1.0;
               offset:   0    -10;
            }
            rel2 {
     to_y: "elm.text";
               relative: 0.0  0.0;
               offset:   -1   -1;
            }
         }
      }
      part { name: "elm.swallow.icon";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.5 0.5;
            rel1 {
               relative: 0.0  0.0;
               offset:   -1    4;
            }
            rel2 {
               to_y: "elm.swallow.pad";
               relative: 1.0  0.0;
               offset:   -1   -5;
            }
         }
      }
      part { name: "elm.swallow.end";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.0;
            aspect: 1.0 1.0;
            aspect_preference: HORIZONTAL;
            rel1 {
               relative: 1.0 0.0;
               offset: -5 -5;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 5 5;
            }
         }
      }
      part { name: "elm.text";
         clip_to: "disclip";
         type: TEXT;
         effect: SOFT_SHADOW;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               relative: 0.0  1.0;
               offset: 0 0;
            }
            rel2 {
               relative: 1.0  1.0;
               offset: 0 -20;
            }
            color: FONT_COLOR;
            color3: 0 0 0 0;
            text {
               font: FONT;
               size: FONT_SIZE;
               min: 0 1;
               align: 0.5 0.0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: FONT_COLOR;
            color3: FONT_COLOR3;
         }
      }
      part { name: "fg1";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.relative: 1.0 0.5;
            rel2.to: "bg";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
      part { name: "fg2";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
   }
   programs {
      // signal: elm,state,%s,active
      //   a "check" item named %s went active
      // signal: elm,state,%s,passive
      //   a "check" item named %s went passive
      // default is passive
      program { name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
      }
      program { name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
      program { name:    "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program { name:    "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
   }
}

//// BROWSER INFO ANCHORBLOCK (elm/entry/base-noedit/default) /////////////////
group { name: "elm/entry/base-noedit/browser";
      name: "elm/entry/base-noedit/default"; // TODO REMOVE ME (but the 'browser' class dont work)
      styles
      {
         style { name: "entry_textblock_style";
            base: "font=Sans font_size="FONT_SIZE" color=#bbb wrap=word";
            tag:  "br" "\n";
            tag:  "ps" "ps";
            tag:  "tab" "\t";
            tag:  "em" "+ font=Sans:style=Oblique";
            tag:  "b" "+ font=Sans:style=Bold";
            tag:  "link" "+ color=#800 underline=on underline_color=#8008";
            tag:  "hilight" "+ font=Sans:style=Bold";
            tag:  "title" "+ font=Sans:style=Bold font_size=25"(FONT_SIZE + 8);
         }
         style { name: "entry_textblock_disabled_style";
            base: "font=Sans font_size=20 color=#888 wrap=word";
            tag:  "br" "\n";
            tag:  "ps" "ps";
            tag:  "tab" "\t";
            tag:  "em" "+ font=Sans:style=Oblique";
            tag:  "b" "+ font=Sans:style=Bold";
            tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
            tag:  "hilight" "+ font=Sans:style=Bold";
         }
      }
      parts {
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 1;
            scale: 1;
            entry_mode: PLAIN;
            select_mode: EXPLICIT;
            multiline: 1;
            source: "elm/entry/selection/default"; // selection under
            source5: "elm/entry/anchor/default"; // anchor under
            description { state: "default" 0.0;
               fixed: 1 0;
               text {
                  style: "entry_textblock_style";
                  min: 0 1;
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "entry_textblock_disabled_style";
               }
            }
         }
      }
      programs {
         program { name: "focus";
            signal: "load";
            source: "";
            action: FOCUS_SET;
            target: "elm.text";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "elm.text";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.text";
         }
      }
   }


