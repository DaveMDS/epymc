//// SCROLLER (elm/scroller/base/default) /////////////////////////////////////
group {name: "elm/list/base/mainmenu"; // mainmenu list
   alias: "elm/genlist/base/browser";  // browser genlist
   alias: "elm/gengrid/base/browser";  // browser gengrid
   script {
      public sbvis_v, sbvis_h, sbalways_v, sbalways_h, sbvis_timer;
      public timer0(val) {
         new v;
         v = get_int(sbvis_v);
         if (v) {
            v = get_int(sbalways_v);
            if (!v) {
               emit("do-hide-vbar", "");
               set_int(sbvis_v, 0);
            }
         }
         v = get_int(sbvis_h);
         if (v) {
            v = get_int(sbalways_h);
            if (!v) {
               emit("do-hide-hbar", "");
               set_int(sbvis_h, 0);
            }
         }
         set_int(sbvis_timer, 0);
         return 0;
      }
   }
   images {
      image: "bt_sm_base2.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
      image: "sl_bt2_2.png" COMP;
      image: "sb_runnerh.png" COMP;
      image: "sb_runnerv.png" COMP;
   }
   parts {
      part { name: "bg";
         type: RECT;
         description { state: "default" 0.0;
            rel1.offset: 2 2;
            rel2.offset: -3 -3;
            color: 255 255 255 0;
         }
      }
      part { name: "clipper";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            rel1.offset: 2 2;
            rel2.offset: -3 -3;
         }
      }
      part { name: "elm.swallow.content";
         clip_to: "clipper";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            rel1.offset: 2 2;
            rel2.offset: -3 -3;
         }
      }
      part { name: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_vbar_clip";
         clip_to: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_vbar";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 17 17;
            align: 1.0 0.0;
            rel1 {
               relative: 1.0 0.0;
               offset:   -2 2;
               to_y:     "elm.swallow.content";
            }
            rel2 {
               relative: 1.0 0.0;
               offset:   -2 -1;
               to_y:     "sb_hbar";
            }
         }
      }
      part { name: "sb_vbar_runner";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            min: 3 3;
            max: 3 99999;
            rel1.to:       "sb_vbar";
            rel2.to:       "sb_vbar";
            image {
               normal: "sb_runnerv.png";
               border: 0 0 4 4;
            }
            fill.smooth: 0;
         }
      }
      part { name: "elm.dragable.vbar";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         dragable {
            x: 0 0 0;
            y: 1 1 0;
            confine: "sb_vbar";
         }
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 17 17;
            rel1 {
               relative: 0.5  0.5;
               offset:   0    0;
                to: "sb_vbar";
            }
            rel2 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_vbar";
            }
            image {
               normal: "bt_sm_base2.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
      }
      part { name: "sb_vbar_over1";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.vbar";
            rel2.relative: 1.0 0.5;
            rel2.to: "elm.dragable.vbar";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
      }
      part { name: "sb_vbar_over2";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.vbar";
            rel2.to: "elm.dragable.vbar";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
      }

      part { name: "sb_hbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_hbar_clip";
         clip_to: "sb_hbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_hbar";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 17 17;
            align: 0.0 1.0;
            rel1 {
               relative: 0.0 1.0;
               offset:   2 -2;
               to_x:     "elm.swallow.content";
            }
            rel2 {
               relative: 0.0 1.0;
               offset:   -1 -2;
               to_x:     "sb_vbar";
            }
         }
      }
      part { name: "sb_hbar_runner";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            min: 3 3;
            max: 99999 3;
            rel1.to:       "sb_hbar";
            rel2.to:       "sb_hbar";
            image {
               normal: "sb_runnerh.png";
               border: 4 4 0 0;
            }
            fill.smooth: 0;
         }
      }
      part { name: "elm.dragable.hbar";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         dragable {
            x: 1 1 0;
            y: 0 0 0;
            confine: "sb_hbar";
         }
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 17 17;
            rel1 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_hbar";
            }
            rel2 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_hbar";
            }
            image {
               normal: "bt_sm_base2.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
      }
      part { name: "sb_hbar_over1";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.dragable.hbar";
            rel2.relative: 1.0 0.5;
            rel2.to: "elm.dragable.hbar";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
      }
      part { name: "sb_hbar_over2";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         description { state: "default" 0.0;
             rel1.to: "elm.dragable.hbar";
             rel2.to: "elm.dragable.hbar";
             image {
                 normal: "bt_sm_shine.png";
                 border: 6 6 6 0;
             }
         }
      }
   }
   programs {
      program { name: "load";
         signal: "load";
         source: "";
         script {
            set_state(PART:"sb_hbar_clip", "hidden", 0.0);
            set_state(PART:"sb_vbar_clip", "hidden", 0.0);
            set_int(sbvis_h, 0);
            set_int(sbvis_v, 0);
            set_int(sbalways_v, 0);
            set_int(sbalways_h, 0);
            set_int(sbvis_timer, 0);
         }
      }
      program { name: "vbar_show";
         signal: "elm,action,show,vbar";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "sb_vbar_clip_master";
      }
      program { name: "vbar_hide";
         signal: "elm,action,hide,vbar";
         source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "sb_vbar_clip_master";
      }
      program { name: "vbar_show_always";
         signal: "elm,action,show_always,vbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_v);
            v |= get_int(sbalways_v);
            if (!v) {
               set_int(sbalways_v, 1);
               emit("do-show-vbar", "");
               set_int(sbvis_v, 1);
            }
         }
      }
      program { name: "vbar_show_notalways";
         signal: "elm,action,show_notalways,vbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbalways_v);
            if (v) {
               set_int(sbalways_v, 0);
               v = get_int(sbvis_v);
               if (!v) {
                  emit("do-hide-vbar", "");
                  set_int(sbvis_v, 0);
               }
            }
         }
      }
      program { name: "sb_vbar_show";
         signal: "do-show-vbar";
         source: "";
         action:  STATE_SET "default" 0.0;
         transition: LINEAR 1.0;
         target: "sb_vbar_clip";
      }
      program { name: "sb_vbar_hide";
         signal: "do-hide-vbar";
         source: "";
         action:  STATE_SET "hidden" 0.0;
         transition: LINEAR 1.0;
         target: "sb_vbar_clip";
      }

      program { name: "hbar_show";
         signal: "elm,action,show,hbar";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "sb_hbar_clip_master";
      }
      program { name: "hbar_hide";
         signal: "elm,action,hide,hbar";
         source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "sb_hbar_clip_master";
      }
      program { name: "hbar_show_always";
         signal: "elm,action,show_always,hbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_h);
            v |= get_int(sbalways_h);
            if (!v) {
               set_int(sbalways_h, 1);
               emit("do-show-hbar", "");
               set_int(sbvis_h, 1);
            }
         }
      }
      program { name: "hbar_show_notalways";
         signal: "elm,action,show_notalways,hbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbalways_h);
            if (v) {
               set_int(sbalways_h, 0);
               v = get_int(sbvis_h);
               if (!v) {
                  emit("do-hide-hbar", "");
                  set_int(sbvis_h, 0);
               }
            }
         }
      }
      program { name: "sb_hbar_show";
         signal: "do-show-hbar";
         source: "";
         action:  STATE_SET "default" 0.0;
         transition: LINEAR 1.0;
         target: "sb_hbar_clip";
      }
      program { name: "sb_hbar_hide";
         signal: "do-hide-hbar";
         source: "";
         action:  STATE_SET "hidden" 0.0;
         transition: LINEAR 1.0;
         target: "sb_hbar_clip";
      }

      program { name: "scroll";
         signal: "elm,action,scroll";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_v);
            v |= get_int(sbalways_v);
            if (!v) {
               emit("do-show-vbar", "");
               set_int(sbvis_v, 1);
            }
            v = get_int(sbvis_h);
            v |= get_int(sbalways_h);
            if (!v) {
               emit("do-show-hbar", "");
               set_int(sbvis_h, 1);
            }
            v = get_int(sbvis_timer);
            if (v > 0) cancel_timer(v);
            v = timer(2.0, "timer0", 0);
            set_int(sbvis_timer, v);
         }
      }
   }
}

//// MAINMENU LIST ITEM (elm/list/item/default) ///////////////////////////////
group { name: "elm/list/item/mainmenu";
   alias: "elm/list/item_odd/mainmenu";
   data.item: "stacking" "above";
   images {
      image: "bt_sm_base1.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
      image: "ilist_1.png" COMP;
      image: "ilist_item_shadow.png" COMP;
   }
   parts {
      part { name: "event";
         type: RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "base_sh";
         mouse_events: 0;
         description {
            state: "default" 0.0;
            align: 0.0 0.0;
            min: 0 10;
            fixed: 1 1;
            rel1 {
               to: "base";
               relative: 0.0 1.0;
               offset: 0 0;
            }
            rel2 {
               to: "base";
               relative: 1.0 1.0;
               offset: -1 0;
            }
            image {
               //~ normal: "ilist_item_shadow.png";
            }
            fill.smooth: 0;
         }
      }
      part { name: "base";
         mouse_events: 0;
         description {
            state: "default" 0.0;
            image {
               //~ normal: "ilist_1.png";
               border: 2 2 2 2;
            }
            fill.smooth: 0;
         }
      }
      part { name: "bg";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1 {
               relative: 0.0 0.0;
               offset: -5 -5;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 4 4;
            }
            image {
               normal: "bt_sm_base1.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
            rel1 {
               relative: 0.0 0.0;
               offset: -2 -2;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 1 1;
            }
         }
      }
      
      part { name: "icon_clip";
         type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 0;
         }
         description { state: "selected" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         clip_to: "icon_clip";
         description { state: "default" 0.0;
            align: 0.5 0.5;
         }
      }
      part { name: "elm.swallow.end";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            rel1 {
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
      part { name: "elm.text";
         type:           TEXT;
         effect:         SOFT_SHADOW;
         mouse_events:   0;
         scale: 1;
         description {
            state: "default" 0.0;
            color: 255 255 255 255;
            color3: 0 0 0 50;
            color2: 0 0 0 50;
            text {
               font: "Aclonica";
               size: 45;
               min: 1 1;
//                  min: 0 1;
               align: 0.5 0.5;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: COLOR_ORANGE 255;
            color3: 0 0 0 100;
            text.size: 65;
         }
      }
      part { name: "fg1";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.relative: 1.0 0.5;
            rel2.to: "bg";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
      part { name: "fg2";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
   }
   programs {
      program { name: "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         transition: DECELERATE 0.2 CURRENT;
         // target:  "bg";
         // target:  "fg1";
         // target:  "fg2";
         target:  "elm.text";
         //target:  "elm.swallow.icon";
         target:  "icon_clip";
      }
      program { name: "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         transition: DECELERATE 0.3 CURRENT;
         // target:  "bg";
         // target:  "fg1";
         // target:  "fg2";
         target:  "elm.text";
         //target:  "elm.swallow.icon";
         target:  "icon_clip";
      }
   }
}

//// DIALOG LIST (big image without label) (elm/list/item/default) ////////////
group { name: "elm/list/item/image_list";
   alias: "elm/list/item_odd/image_list";
   data.item: "stacking" "above";
   images {
      image: "bt_sm_base1.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
      image: "ilist_1.png" COMP;
      image: "ilist_item_shadow.png" COMP;
   }
   // min: 300 300;
   parts {
      part { name: "event";
         type: RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "base_sh";
         mouse_events: 0;
         description {
            state: "default" 0.0;
            align: 0.0 0.0;
            min: 0 10;
            fixed: 1 1;
            rel1 {
               to: "base";
               relative: 0.0 1.0;
               offset: 0 0;
            }
            rel2 {
               to: "base";
               relative: 1.0 1.0;
               offset: -1 0;
            }
            image {
               normal: "ilist_item_shadow.png";
            }
            fill.smooth: 0;
         }
      }
      part { name: "base";
         mouse_events: 0;
         description {
            state: "default" 0.0;
            image {
               normal: "ilist_1.png";
               border: 2 2 2 2;
            }
            fill.smooth: 0;
         }
      }
      part { name: "bg";
         mouse_events: 0;
         
         description { state: "default" 0.0;
            min: 200 200;
            visible: 0;
            color: 255 255 255 0;
            rel1 {
               relative: 0.0 0.0;
               offset: -5 -5;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 4 4;
            }
            image {
               normal: "bt_sm_base1.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
            rel1 {
               relative: 0.0 0.0;
               offset: -2 -2;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 1 1;
            }
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         description { state: "default" 0.0;
            // fixed: 1 1;
            align: 0.5 0.5;
            min: 200 200;
            rel1 {
               relative: 0.0  0.0;
               // offset:   4    4;
            }
            rel2 {
               relative: 1.0  1.0;
               // offset:   4   -5;
            }
         }
      }
      part { name: "fg1";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.relative: 1.0 0.5;
            rel2.to: "bg";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
      part { name: "fg2";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
   }
   programs {
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         // target:  "elm.text";
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         // target:  "elm.text";
         transition: LINEAR 0.1;
      }
   }
}

//// DIALOG LIST H (big image without label) (elm/list/h_item/default) ////////
group { name: "elm/list/h_item/image_list";
   alias: "elm/list/h_item_odd/image_list";
   data.item: "stacking" "above";
   images {
      image: "bt_sm_base1.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
      image: "ilist_1_h.png" COMP;
      image: "ilist_item_shadow_h.png" COMP;
   }
   parts {
      part {
         name: "event";
         type: RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part {
         name: "base";
         mouse_events: 0;
         description {
            state: "default" 0.0;
            image {
               normal: "ilist_1_h.png";
               border: 2 2 2 2;
            }
            fill.smooth: 0;
         }
      }
      part { name: "bg";
         mouse_events: 0;
         
         description { state: "default" 0.0;
            visible: 0;
            min: 300 300;
            color: 255 255 255 0;
            rel1 {
               relative: 0.0 0.0;
               offset: -5 -5;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: -2 4;
            }
            image {
               normal: "bt_sm_base1.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 150;
            rel1 {
               relative: 0.0 0.0;
               offset: -2 -2;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 1 1;
            }
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 0 1;
            align: 0.5 0.5;
            rel1 {
               relative: 0.0 0.0;
               offset: 20 4;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: -20 4;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 180;
         }
      }
      part { name: "fg1";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.relative: 1.0 0.5;
            rel2.to: "bg";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 0;
            color: 255 255 255 255;
         }
      }
      part { name: "fg2";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }
   }
   programs {
      program {
         name: "go_active";
         signal: "elm,state,selected";
         source: "elm";
         action: STATE_SET "selected" 0.0;
         target: "bg";
         target: "fg1";
         target: "fg2";
      }
      program {
         name: "go_passive";
         signal: "elm,state,unselected";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "bg";
         target: "fg1";
         target: "fg2";
         transition: LINEAR 0.1;
      }
   }
}

//// DIALOG LISTS (icon + text) (elm/list/item/default) ////////
group { name: "elm/list/item/default";
   data.item: "selectraise" "on";
   images {
      image: "vgrad_med_dark.png" COMP;
      image: "shadow_rounded_horiz.png" COMP;
      image: "shine.png" COMP;
      image: "bevel_curved_horiz_out.png" COMP;
      image: "bevel_horiz_out.png" COMP;
      image: "ilist_item_shadow.png" COMP;
   }
   parts {
      part { name: "event";
         type: RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "base";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 64 64 64 255;
         }
      }
      part { name: "bevel";
         mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "bevel_curved_horiz_out.png";
            image.border: 0 0 2 2;
            image.middle: 0;
            fill.smooth: 0;
         }
      }
      part { name: "sel_shadow";
         mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "shadow_rounded_horiz.png";
            image.border: 0 0 9 9;
            rel1.offset: 0 -4;
            rel2.offset: -1 5;
            fill.smooth: 0;
            visible: 0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "sel_base";
         mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "vgrad_med_dark.png";
            fill {
               smooth: 0;
               size {
                  relative: 0.0 1.0;
                  offset: 120 0;
               }
            }
            visible: 0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "sel_bevel"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "bevel_horiz_out.png";
            image.border: 0 0 2 2;
            image.middle: 0;
            fill.smooth: 0;
            visible: 0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.icon";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               relative: 0.0  0.0;
               offset:   4    4;
            }
            rel2 {
               relative: 0.0  1.0;
               offset:   4   -5;
            }
         }
      }
      part { name: "elm.swallow.end";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 1.0 0.5;
            rel1 {
               relative: 1.0  0.0;
               offset:   -5    4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:   -5   -5;
            }
         }
      }
      part { name: "elm.text";
         clip_to: "disclip";
         type:           TEXT;
         effect:         SOFT_SHADOW;
         mouse_events:   0;
         scale: 1;
         description {
            state: "default" 0.0;
            rel1 {
               to_x:     "elm.swallow.icon";
               relative: 1.0  0.0;
               offset:   4 4;
            }
            rel2 {
               to_x:     "elm.swallow.end";
               relative: 0.0  1.0;
               offset:   -1 -5;
            }
            color: 0 0 0 255;
            color3: 0 0 0 0;
            text {
               font: FONT;
               size: FONT_SIZE;
               min: 0 1;
               align: 0.0 0.5;
               text_class: "list_item";
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 224 224 224 255;
            color3: 0 0 0 64;
         }
      }
      part { name: "sel_shine";
         mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "shine.png";
            rel1.offset: 0 -2;
            rel1.to: "sel_base";
            rel2.relative: 1.0 0.0;
            rel2.offset: -1 2;
            rel2.to: "sel_base";
            min: 69 5;
            max: 69 5;
            fixed: 1 1;
            visible: 0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "sel_base";
            rel2.to: "sel_base";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
   }
   programs {
      program {
         name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "sel_base";
         target:  "sel_shine";
         target:  "sel_bevel";
         target:  "sel_shadow";
         target:  "elm.text";
      }
      program {
         name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "sel_base";
         target:  "sel_shine";
         target:  "sel_bevel";
         target:  "sel_shadow";
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
      program {
         name:    "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program {
         name:    "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
   }
}
group { name: "elm/list/item_odd/default";
   inherit: "elm/list/item/default";
   parts {
      part { name: "base";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 56 56 56 255;
         }
      }
   }
}

//// BROWSER GENLIST ITEM COMP (elm/genlist/item_compress/default/default) ////
group { name: "elm/genlist/item/default/browser";
   alias: "elm/genlist/item_odd/default/browser";
   alias: "elm/genlist/item/default/dialog";
   alias: "elm/genlist/item_odd/default/dialog";
   data.item: "stacking" "above";
   data.item: "selectraise" "on";
   data.item: "texts" "elm.text";
   data.item: "contents" "elm.swallow.icon elm.swallow.end";
   // data.item: "treesize" "20";
   // data.item: "states" "";
   images {
      image: "bt_sm_base1.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
      image: "ilist_1.png" COMP;
      image: "ilist_item_shadow.png" COMP;
      image: "separator.png" COMP;
   }
   parts {
      part { name: "event";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "sep";
         type: IMAGE;
         description { state: "default" 0.0;
            max: 99999 2;
            align: 0.5 1.0;
            image.normal: "separator.png";
         }
      }
      part { name: "bg";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1 {
               relative: 0.0 0.0;
               offset: -5 -5;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 4 4;
            }
            image {
               normal: "bt_sm_base1.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
            rel1 {
               relative: 0.0 0.0;
               offset: -2 -2;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 1 1;
            }
         }
      }
      part { name: "elm.swallow.pad";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               relative: 0.0  0.0;
               offset:   4    4;
            }
            rel2 {
               relative: 0.0  1.0;
               offset:     4   -5;
            }
         }
      }
      part { name: "elm.swallow.icon";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            rel1 {
               to_x: "elm.swallow.pad";
               relative: 1.0  0.0;
               offset:    -1    4;
            }
            rel2 {
               to_x: "elm.swallow.pad";
               relative: 1.0  1.0;
               offset:    -1   -5;
            }
         }
      }
      part { name: "elm.swallow.end";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            rel1 {
               relative: 1.0  0.0;
               offset:    -5    4;
            }
            rel2 {
               relative: 1.0  1.0;
               offset:    -5   -5;
            }
         }
      }
      part { name: "elm.text";
         clip_to: "disclip";
         type:           TEXT;
         effect:         SOFT_SHADOW;
         mouse_events:   0;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               to_x:     "elm.swallow.icon";
               relative: 1.0  0.0;
               offset:   0 4;
            }
            rel2 {
               to_x:     "elm.swallow.end";
               relative: 0.0  1.0;
               offset:   -1 -5;
            }
            color: FONT_COLOR;
            color3: FONT_COLOR3;
            text {
               font: FONT;
               size: FONT_SIZE;
               align: 0.0 0.5;
               min: 0 1;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 224 224 224 255;
            color3: 0 0 0 64;
         }
      }
      /*
      part { name: "TESTING_ICON";
         clip_to: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            color: 150 150 0 150;
            rel1.to: "elm.swallow.icon";
            rel2.to: "elm.swallow.icon";
         }
      }
      part { name: "TESTING_TEXT";
         clip_to: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 150 150 150;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
         }
      }
      part { name: "TESTING_END";
         clip_to: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            color: 150 0 150 150;
            rel1.to: "elm.swallow.end";
            rel2.to: "elm.swallow.end";
         }
      }
      */
      part { name: "fg1";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.relative: 1.0 0.5;
            rel2.to: "bg";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
      part { name: "fg2";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
   }
   programs {
      // signal: elm,state,%s,active
      //   a "check" item named %s went active
      // signal: elm,state,%s,passive
      //   a "check" item named %s went passive
      // default is passive
      program { name:"go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
      }
      program { name:"go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
      program { name:"go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program { name:"go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
   }
}

//// BROWSER GENGRID ITEM (elm/gengrid/item/default/default) //////////////////
group { name: "elm/gengrid/item/default/browser";
   data.item: "texts" "elm.text";
   data.item: "contents" "elm.swallow.icon elm.swallow.end";
   images {
      image: "bt_sm_base1.png" COMP;
      image: "bt_sm_shine.png" COMP;
      image: "bt_sm_hilight.png" COMP;
      image: "ilist_1.png" COMP;
      image: "ilist_item_shadow.png" COMP;
   }
   parts {
      part { name: "event";
         type: RECT;
         repeat_events: 1;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "bg";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1 {
               relative: 0.0 0.0;
               offset: -5 -5;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 4 4;
            }
            image {
               normal: "bt_sm_base1.png";
               border: 6 6 6 6;
            }
            image.middle: SOLID;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
            rel1 {
               relative: 0.0 0.0;
               offset: -2 -2;
            }
            rel2 {
               relative: 1.0 1.0;
               offset: 1 1;
            }
         }
      }
      part { name: "elm.swallow.pad";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               relative: 0.0  1.0;
               offset:   0    -10;
            }
            rel2 {
     to_y: "elm.text";
               relative: 0.0  0.0;
               offset:   -1   -1;
            }
         }
      }
      part { name: "elm.swallow.icon";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.5 0.5;
            rel1 {
               relative: 0.0  0.0;
               offset:   -1    4;
            }
            rel2 {
               to_y: "elm.swallow.pad";
               relative: 1.0  0.0;
               offset:   -1   -5;
            }
         }
      }
      part { name: "elm.swallow.end";
         clip_to: "disclip";
         type: SWALLOW;
         description { state: "default" 0.0;
            aspect: 1.0 1.0;
            aspect_preference: HORIZONTAL;
            rel1.relative: 0.5 0.5;

         }
      }
      part { name: "elm.text";
         clip_to: "disclip";
         type: TEXT;
         effect: SOFT_SHADOW;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               relative: 0.0  1.0;
               offset: 0 0;
            }
            rel2 {
               relative: 1.0  1.0;
               offset: 0 -20;
            }
            color: FONT_COLOR;
            color3: 0 0 0 0;
            text {
               font: FONT;
               size: FONT_SIZE;
               min: 0 1;
               align: 0.5 0.0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: FONT_COLOR;
            color3: FONT_COLOR3;
         }
      }
      part { name: "fg1";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.relative: 1.0 0.5;
            rel2.to: "bg";
            image {
               normal: "bt_sm_hilight.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
      part { name: "fg2";
         clip_to: "disclip";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
            rel1.to: "bg";
            rel2.to: "bg";
            image {
               normal: "bt_sm_shine.png";
               border: 6 6 6 0;
            }
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 255 255 255 100;
         }
      }
      part { name: "disclip";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
   }
   programs {
      // signal: elm,state,%s,active
      //   a "check" item named %s went active
      // signal: elm,state,%s,passive
      //   a "check" item named %s went passive
      // default is passive
      program { name:    "go_active";
         signal:  "elm,state,selected";
         source:  "elm";
         action:  STATE_SET "selected" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
      }
      program { name:    "go_passive";
         signal:  "elm,state,unselected";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "bg";
         target:  "fg1";
         target:  "fg2";
         target:  "elm.text";
         transition: LINEAR 0.1;
      }
      program { name:    "go_disabled";
         signal:  "elm,state,disabled";
         source:  "elm";
         action:  STATE_SET "disabled" 0.0;
         target:  "disclip";
      }
      program { name:    "go_enabled";
         signal:  "elm,state,enabled";
         source:  "elm";
         action:  STATE_SET "default" 0.0;
         target:  "disclip";
      }
   }
}

//// DIALOGS ENTRY (elm/entry/base-noedit/default) ////////////////////////////
group { name: "elm/entry/base-noedit/dialog";
   parts {
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: PLAIN;
         select_mode: EXPLICIT;
         multiline: 1;
         source: "elm/entry/selection/default"; // selection under
         source5: "elm/entry/anchor/default"; // anchor under
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "epymc_dialog_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "epymc_dialog_style";
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
   }
}

group { name: "elm/entry/selection/default";
   parts {
      part { name: "bg";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 128 128 128 128;
         }
      }
   }
}

group { name: "elm/entry/anchor/default";
   parts {
      part { name: "bg";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 128 0 0 64;
         }
      }
   }
}

//// VKEYBOARD ENTRY (elm/entry/base-single-noedit/default) ///////////////////
group { name: "elm/entry/base-single-noedit/vkeyboard";
   parts {
      part { name: "elm.text";
         type: TEXTBLOCK;
         entry_mode: PLAIN;
         multiline: 0;
         source: "elm/entry/selection/default"; // selection under
         source4: ""; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         description { state: "default" 0.0;
            text {
               style: "epymc_dialog_style";
               min: 1 1;
               max: 0 0;
               align: 0.0 0.5;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "epymc_dialog_style";
            }
         }
      }
   }
}

//// BUTTONS (elm/button/base/default) OLD OLD OLD ////////////////////////////////////////
group { name: "elm/button/base/OLDOLDOLD";
   images {
      image: "bt_base1.png" COMP;
      image: "bt_hilight.png" COMP;
      image: "bt_shine.png" COMP;
      image: "bt_glow.png" COMP;
      image: "bt_dis_base.png" COMP;
   }
   parts {
      part { name: "button_image";
         mouse_events: 1;
         description { state: "default" 0.0;
            min: 15 15;
            color: 255 255 255 255;
            image {
               normal: "bt_base1.png";
               border: 3 3 3 3;
            }
            image.middle: SOLID;
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "bt_base1.png";
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            image {
               normal: "bt_dis_base.png";
               border: 4 4 4 4;
            }
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 0.0 0.5;
            rel1.offset: 19 4;
            rel2.offset: 3 -5;
            rel2.relative: 0.0 1.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 0;
            visible: 1;
            aspect: 1.0 1.0;
            //aspect_preference: VERTICAL;
            rel2.offset: 4 -5;
         }
         description { state: "icononly" 0.0;
            align: 0.5 0.5;
            aspect: 1.0 1.0;
            aspect_preference: BOTH;
         }
      }
      part { name: "elm.text";
         type:          TEXT;
         effect:        SOFT_SHADOW;
         mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to_x: "elm.swallow.content";
            rel1.relative: 1.0 0.0;
            rel1.offset: 0 4;
            rel2.offset: -20 -5;
            color: 224 224 224 255;
            color3: 0 0 0 64;
            text {
               font:     "Sans,Edje-Vera";
               size:     24;
               min:      0 0;
               align:    0.5 0.5;
               text_class: "button";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 128;
            color3: 0 0 0 0;
            visible: 1;
            text.min: 1 1;
         }
      }
      part { name: "over1";
         mouse_events: 0;
         description { state: "default" 0.0;
            image {
               normal: "bt_hilight.png";
               border: 2 2 2 2;
            }
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
         }
      }
      part { name: "over2";
         mouse_events: 1;
         repeat_events: 1;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            image {
               // normal: "bt_shine.png";
               // border: 7 7 7 7;
            }
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            visible: 0;
         }
      }
      part { name: "over3";
         mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 255 255 255 0;
            image {
               // normal: "bt_glow.png";
               border: 12 12 12 12;
            }
            fill.smooth : 0;
         }
         description { state: "clicked" 0.0;
            inherit:  "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "button_click";
         signal: "mouse,down,1";
         source: "over2";
         action: SIGNAL_EMIT "elm,action,press" "";
         after: "button_click_anim";
      }
      program { name: "button_click_anim";
         action: STATE_SET "clicked" 0.0;
         target: "button_image";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1";
         source: "over3";
         action: SIGNAL_EMIT "elm,action,unpress" "";
         after: "button_unclick_anim";
      }
      program { name: "button_pressed_anim";
         signal: "elm,anim,activate";
         source: "elm";
         action: STATE_SET "clicked" 0.0;
         target: "button_image";
         target: "over3";
         after: "button_unpressed_anim";
      }
      program { name: "button_unpressed_anim";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "button_image";
         target: "over3";
      }
      program { name: "button_unclick_anim";
         action: STATE_SET "default" 0.0;
         target: "button_image";
      }
      program { name: "button_click2";
         signal: "mouse,down,1";
         source: "over3";
         action: STATE_SET "clicked" 0.0;
         target: "over3";
      }
      program { name: "button_unclick2";
         signal: "mouse,up,1";
         source: "over3";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "over3";
      }
      program { name: "button_unclick3";
         signal: "mouse,clicked,1";
         source: "over2";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "icononly"))
              set_state(PART:"elm.swallow.content", "visible", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled") || (!strcmp(st, "disabled_visible")))
              set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
              set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible"))
            set_state(PART:"elm.swallow.content", "icononly", 0.0);
            set_state(PART:"elm.text", "default", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "default") || (!strcmp(st, "visible")))
              set_state(PART:"elm.text", "default", 0.0);
            else
              set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
            set_state(PART:"elm.swallow.content", "visible", 0.0);
            else
            set_state(PART:"elm.swallow.content", "icononly", 0.0);
         }
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            set_state(PART:"button_image", "disabled", 0.0);
            set_state(PART:"over1", "disabled", 0.0);
            set_state(PART:"over2", "disabled", 0.0);
            set_state(PART:"disabler", "disabled", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible") || !strcmp(st, "disabled_visible"))
              set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
              set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            set_state(PART:"button_image", "visible", 0.0);
            set_state(PART:"over1", "visible", 0.0);
            set_state(PART:"over2", "visible", 0.0);
            set_state(PART:"disabler", "visible", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible") || !strcmp(st, "disabled_visible"))
              set_state(PART:"elm.text", "visible", 0.0);
            else
              set_state(PART:"elm.text", "default", 0.0);
         }
      }
   }
}

//// BUTTONS (elm/button/base/default) ////////////////////////////////////////
group { name: "elm/button/base/emcHIDE";
   images {
      image: "button_base1.png" COMP;
      image: "button_base2.png" COMP;
      image: "bt_hilight.png" COMP;
      image: "bt_shine.png" COMP;
      image: "button_glow.png" COMP;
      image: "button_dis_base.png" COMP;
      image: "bt_dis_hilight.png" COMP;
   }
   parts {
      part { name: "button_image";
         mouse_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            min: 50 35;
            image {
               normal: "button_base1.png";
               border: 17 17 17 17;
               middle: NONE;
            }
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            image.normal: "bt_base1.png";
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            image {
               normal: "button_dis_base.png";
               border: 10 10 10 10;
               middle: SOLID;
            }
         }
      }
      part { name: "button_color";
         description { state: "default" 0.0;
            image {
               normal: "button_base2.png";
               border: 17 17 17 17;
            }
         }
         // description { state: "clicked" 0.0;
            // inherit: "default" 0.0;
            // image.normal: "bt_base1.png";
         // }
         description { state: "disabled" 0.0;
            visible: 0;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            color_class: "button_color";
         }
      }
      part { name: "over1";
         mouse_events: 0;
         description { state: "default" 0.0;
            image {
               // normal: "bt_hilight.png";
               normal: "button_glow.png";
               border: 17 17 17 0;
            }
         }
         description { state: "disabled" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.swallow.content"; /* API */
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 0.0 0.5;
            rel1.offset: 8 8;
            rel2.offset: 8 -8;
            rel2.relative: 0.0 1.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 0;
            visible: 1;
            aspect: 1.0 1.0;
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
            fixed: 1 0;
            visible: 1;
            align: 0.5 0.5;
            aspect: 1.0 1.0;
            rel1.offset: 0 8;
            rel2.offset: -1 -8;
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "elm.text";
         type:          TEXT;
         effect:        SOFT_SHADOW;
         mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to_x: "elm.swallow.content";
            rel1.relative: 1.0 0.0;
            rel1.offset: 0 0;
            rel2.offset: -8 0;
            color: FONT_COLOR;
            color3: FONT_COLOR3;
            text {
               font:     "Sans,Edje-Vera";
               size:     FONT_SIZE;
               min:      0 0;
               align:    0.5 0.5;
               text_class: "button";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: 180 180 180 200;
            color3: 0 0 0 0;
            visible: 1;
            text.min: 1 1;
         }
      }

      part { name: "over3"; // clicked down
         mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 255 255 255 0;
            image {
               normal: "bt_glow.png";
               border: 12 12 12 12;
            }
            fill.smooth : 0;
         }
         description { state: "clicked" 0.0;
            inherit:  "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "button_click";
         signal: "mouse,down,1";
         source: "over1";
         action: SIGNAL_EMIT "elm,action,press" "";
         after: "button_click_anim";
      }
      program { name: "button_click_anim";
         action: STATE_SET "clicked" 0.0;
         target: "button_image";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1";
         source: "over3";
         action: SIGNAL_EMIT "elm,action,unpress" "";
         after: "button_unclick_anim";
      }
      program { name: "button_pressed_anim";
         signal: "elm,anim,activate";
         source: "elm";
         action: STATE_SET "clicked" 0.0;
         target: "button_image";
         target: "over3";
         after: "button_unpressed_anim";
      }
      program { name: "button_unpressed_anim";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "button_image";
         target: "over3";
      }
      program { name: "button_unclick_anim";
         action: STATE_SET "default" 0.0;
         target: "button_image";
      }
      program { name: "button_click2";
         signal: "mouse,down,1";
         source: "over3";
         action: STATE_SET "clicked" 0.0;
         target: "over3";
      }
      program { name: "button_unclick2";
         signal: "mouse,up,1";
         source: "over3";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "over3";
      }
      program { name: "button_unclick3";
         signal: "mouse,clicked,1";
         source: "over1";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "icononly"))
              set_state(PART:"elm.swallow.content", "visible", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled") || (!strcmp(st, "disabled_visible")))
              set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
              set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible"))
            set_state(PART:"elm.swallow.content", "icononly", 0.0);
            set_state(PART:"elm.text", "default", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "default") || (!strcmp(st, "visible")))
              set_state(PART:"elm.text", "default", 0.0);
            else
              set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
            set_state(PART:"elm.swallow.content", "visible", 0.0);
            else
            set_state(PART:"elm.swallow.content", "icononly", 0.0);
         }
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            set_state(PART:"button_image", "disabled", 0.0);
            set_state(PART:"button_color", "disabled", 0.0);
            set_state(PART:"over1", "disabled", 0.0);
            set_state(PART:"disabler", "disabled", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible") || !strcmp(st, "disabled_visible"))
              set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
              set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            set_state(PART:"button_image", "visible", 0.0);
            set_state(PART:"button_color", "visible", 0.0);
            set_state(PART:"over1", "visible", 0.0);
            set_state(PART:"disabler", "visible", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible") || !strcmp(st, "disabled_visible"))
              set_state(PART:"elm.text", "visible", 0.0);
            else
              set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "focus";
         signal: "elm,action,focus";
         source: "elm";
         action: STATE_SET "focused" 0.0;
         target: "button_color";
      }
      program { name: "unfocus";
         signal: "elm,action,unfocus";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "button_color";
      }
   }
}

//// BUTTONS2 (elm/button/base/default) ////////////////////////////////////////
group { name: "elm/button/base/emc";
   images {
      image: "button2_base.png" COMP;
      image: "button2_hilight.png" COMP;
      image: "bt_shine.png" COMP;
      image: "button_glow.png" COMP;
      image: "button_dis_base.png" COMP;
      image: "bt_dis_hilight.png" COMP;
   }
   parts {
      part { name: "button_image";
         mouse_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            min: 50 35;
            image {
               normal: "button2_base.png";
               border: 4 4 4 4;
            }
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            // image.normal: "bt_base1.png";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            // image {
               // normal: "button_dis_base.png";
               // border: 10 10 10 10;
               // middle: SOLID;
            // }
         }
      }
      part { name: "hilight";
         mouse_events: 0;
         description { state: "default" 0.0;
            visible: 0;
            image {
               normal: "button2_hilight.png";
            }
         }
         description { state: "focused" 0.0;
            inherit:  "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.content"; /* API */
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 0.0 0.5;
            rel1.offset: 8 8;
            rel2.offset: 8 -8;
            rel2.relative: 0.0 1.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 0;
            visible: 1;
            aspect: 1.0 1.0;
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
            fixed: 1 0;
            visible: 1;
            align: 0.5 0.5;
            aspect: 1.0 1.0;
            rel1.offset: 0 8;
            rel2.offset: -1 -8;
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "elm.text"; /* API */
         type:          TEXT;
         mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to_x: "elm.swallow.content";
            rel1.relative: 1.0 0.0;
            rel1.offset: 0 0;
            rel2.offset: -8 0;
            color: FONT_COLOR;
            text {
               font:     "Sans,Edje-Vera";
               size:     FONT_SIZE;
               min:      0 0;
               align:    0.5 0.5;
               text_class: "button";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 150 150 150 255;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: 180 180 180 255;
            visible: 1;
            text.min: 1 1;
         }
      }

      part { name: "over3"; // clicked down
         mouse_events: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            color: 255 255 255 0;
            rel1.offset: -2 -2;
            rel2.offset: 2 2;
            image {
               normal: "bt_glow.png";
               border: 12 12 12 12;
            }
            fill.smooth: 0;
         }
         description { state: "clicked" 0.0;
            inherit:  "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { name: "button_click";
         signal: "mouse,down,1";
         source: "button_image";
         action: SIGNAL_EMIT "elm,action,press" "";
         after: "button_click_anim";
      }
      program { name: "button_click_anim";
         action: STATE_SET "clicked" 0.0;
         target: "button_image";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1";
         source: "button_image";
         action: SIGNAL_EMIT "elm,action,unpress" "";
         after: "button_unclick_anim";
      }
      program { name: "button_pressed_anim";
         signal: "elm,anim,activate";
         source: "elm";
         action: STATE_SET "clicked" 0.0;
         target: "over3";
         after: "button_unpressed_anim";
      }
      program { name: "button_unpressed_anim";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "over3";
      }
      program { name: "button_unclick_anim";
         action: STATE_SET "default" 0.0;
         target: "button_image";
      }
      program { name: "button_click2";
         signal: "mouse,down,1";
         source: "button_image";
         action: STATE_SET "clicked" 0.0;
         target: "over3";
      }
      program { name: "button_unclick2";
         signal: "mouse,up,1";
         source: "over3";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "over3";
      }
      program { name: "button_unclick3";
         signal: "mouse,clicked,1";
         source: "button_image";
         action: SIGNAL_EMIT "elm,action,click" "";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "icononly"))
              set_state(PART:"elm.swallow.content", "visible", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled") || (!strcmp(st, "disabled_visible")))
              set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
              set_state(PART:"elm.text", "visible", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible"))
            set_state(PART:"elm.swallow.content", "icononly", 0.0);
            set_state(PART:"elm.text", "default", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "default") || (!strcmp(st, "visible")))
              set_state(PART:"elm.text", "default", 0.0);
            else
              set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
            set_state(PART:"elm.swallow.content", "visible", 0.0);
            else
            set_state(PART:"elm.swallow.content", "icononly", 0.0);
         }
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            set_state(PART:"button_image", "disabled", 0.0);
            set_state(PART:"hilight", "disabled", 0.0);
            set_state(PART:"disabler", "disabled", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible") || !strcmp(st, "disabled_visible"))
              set_state(PART:"elm.text", "disabled_visible", 0.0);
            else
              set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            set_state(PART:"button_image", "visible", 0.0);
            set_state(PART:"hilight", "focused", 0.0);
            set_state(PART:"disabler", "visible", 0.0);
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible") || !strcmp(st, "disabled_visible"))
              set_state(PART:"elm.text", "visible", 0.0);
            else
              set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "focus";
         signal: "elm,action,focus";
         source: "elm";
         action: STATE_SET "focused" 0.0;
         target: "hilight";
      }
      program { name: "unfocus";
         signal: "elm,action,unfocus";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "hilight";
      }
   }
}
