
#define DEBUG_ENABLE 0
#if DEBUG_ENABLE
#define DBG(...) { \
   new _buf[128]; \
   snprintf(_buf, sizeof(_buf), __VA_ARGS__); \
   set_text(PART:"embryo_dbg", _buf); }
#else
#define DBG(...)
#endif


images {
   image: "background.jpg" COMP;
   image: "bg_configuration.jpg" COMP;
}

externals {
   external: "elm";
}

#define FONT "Sans"
#define FONT_BOLD "Sans:style=Bold"
#define FONT_SIZE 16
#define FONT_COLOR 255 255 255 255
#define FONT_COLOR3 0 0 0 64

collections {

   #include "elm_extension.edc"
   #include "icons.edc"
   
   group { name: "epymc_main_layout";

/// clock embryo script
      script {
          public clock_cb(val) {
            new year, month, day, yearday, weekday, hour, minute;
            new Float:second;
            new buf[32];

            date(year, month, day, yearday, weekday, hour, minute, second);
            snprintf(buf, sizeof(buf), "%d:%d", hour, minute);
            set_text(PART:"topbar/clock", buf);
            timer(60.0 - (second), "clock_cb", 1);
         }
      }

      parts {

/// main background
         part { name: "main_bg";
            type: IMAGE;
            description { state: "default" 0.0;
               min: 1280 720;
               image {
                  normal: "background.jpg";
               }
            }
         }

/// browser view: cubelist
         part { name: "browser/cubelist/info"; /* API */
            type: EXTERNAL;
            clip_to: "browser/cubelist/clip";
            source: "elm/anchorblock";
            description { state: "default" 0;
               rel1 {
                  relative: 0.5 0.65;
                  offset: 20 0;
               }
               rel2 {
                  offset: -20 -20;
               }
               params {
                  string: "text" "Short Info";
               }
            }
         }
         part { name: "browser/cubelist/poster"; /* API */
            type: SWALLOW;
            clip_to: "browser/cubelist/clip";
            description { state: "default" 0;
               rel1 {
                  relative: 0.5 0;
                  offset: 20 50;
               }
               rel2 {
                  relative: 1 0.65;
                  offset: -20 0;
               }
            }
         }
         part { name: "browser/cubelist/flip"; /* API */
            type: EXTERNAL;
            clip_to: "browser/cubelist/clip";
            source: "elm/flip";
            description { state: "default" 0;
               rel1 {
                  offset: 20 50;
               }
               rel2 {
                  relative: 0.5 1;
                  offset: 0 -20;
               }
            }
         }
         part { name: "browser/cubelist/clip";
            type: RECT;
            description { state: "default" 0;
               color: 255 255 255 0;
               visible: 0;
            }
            description { state: "visible" 0;
               color: 255 255 255 255;
               visible: 1;
            }
         }

/// browser view: list
         part { name: "browser/list/clip";
            type: RECT;
            description { state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
            description { state: "visible" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         part { name: "browser/list/list_frame";
            type: RECT;
            clip_to: "browser/list/clip";
            description { state: "default" 0.0;
               color: 0 100 150 70;
               rel1.offset: 10 50;
               rel2.relative: 0.5 1.0;
               rel2.offset: -1 -10;
            }
         }
         part { name: "browser/list/list_clip";
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  to: "browser/list/list_frame";
                  offset: 5 5;
               }
               rel2 {
                  to: "browser/list/list_frame";
                  offset: -6 -6;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         part { name: "browser/list/genlist1"; /* API */
            type: EXTERNAL;
            source: "elm/genlist";
            clip_to: "browser/list/list_clip";
            description { state: "default" 0.0;
               rel1.to: "browser/list/list_clip";
               rel2.to: "browser/list/list_clip";
            }
            description { state: "center" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "left" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 0.0;
               rel2.relative: 0.0 1.0;
            }
            description { state: "right" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part { name: "browser/list/genlist2"; /* API */
            type: EXTERNAL;
            source: "elm/genlist";
            clip_to: "browser/list/list_clip";
            description { state: "default" 0.0;
               rel1 {
                  to: "browser/list/genlist1";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to: "browser/list/genlist1";
                  relative: 2.0 1.0;
               }
            }
            description { state: "on_the_right" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "on_the_left" 0.0;
               rel1 {
                  to: "browser/list/genlist1";
                  relative: -1.0 0.0;
               }
               rel2 {
                  to: "browser/list/genlist1";
                  relative: 0.0 1.0;
               }
            }
         }
         part { name: "browser/list/poster"; /* API */
            type: SWALLOW;
            clip_to: "browser/list/clip";
            description { state: "default" 0.0;
               rel1 {
                  relative: 0.5 0.0;
                  offset: 20 50;
               }
               rel2 {
                  relative: 1.0 0.65;
                  offset: -20 0;
               }
            }
         }
         part { name: "browser/list/info"; /* API */
            type: EXTERNAL;
            clip_to: "browser/list/clip";
            source: "elm/anchorblock";
            description { state: "default" 0.0;
               rel1 {
                  relative: 0.5 0.65;
                  offset: 20 0;
               }
               rel2 {
                  offset: -20 -20;
               }
            }
         }

/// browser view: grid
         part { name: "browser/grid/gengrid"; /* API */
            type: SWALLOW;
            clip_to: "browser/grid/clip";
            description { state: "default" 0;
               color: 255 255 255 100;
               rel1.offset: 0 100;
            }
         }
         part { name: "browser/grid/title"; /* API */
            type: TEXT;
            clip_to: "browser/grid/clip";
            effect: FAR_SOFT_SHADOW;
            description { state: "default" 0;
               color: 200 200 200 255;
               color3: 50 50 50 100;
               rel1.offset: 0 40;
               rel2.relative: 1.0 0.0;
               rel2.offset: 0 100;
               text {
                  font: FONT_BOLD;
                  size: 40;
               }
            }
         }
         part { name: "browser/grid/clip";
            type: RECT;
            description { state: "default" 0;
               color: 255 255 255 0;
               visible: 0;
            }
            description { state: "visible" 0;
               color: 255 255 255 255;
               visible: 1;
            }
         }

/// browser top bar
         part { name: "topbar/clip";
            type: RECT;
            description { state: "default" 0.0;
               color: 255 255 255 255;
               rel1 {
                  offset: 0 -40;
               }
               rel2 {
                  relative: 1.0 0.0;
               }
            }
            description { state: "visible" 0.0;
               color: 255 255 255 255;
               rel2 {
                  relative: 1.0 0.0;
                  offset: -1 39;
               }
            }
         }
         part { name: "topbar/bg";
            type: RECT;
            clip_to: "topbar/clip";
            description { state: "default" 0.0;
               color: 255 0 0 100;
               rel1.to: "topbar/clip";
               rel2.to: "topbar/clip";
            }
         }
         part { name: "topbar/home_icon";
            type: IMAGE;
            clip_to: "topbar/clip";
            description { state: "default" 0.0;
               color: 255 255 255 200;
               rel1 {
                  to: "topbar/clip";
                  offset: 20 10;
               }
               rel2 {
                  to: "topbar/clip";
                  relative: 0.0 1.0;
                  offset: 55 -10;
               }
               image {
                  normal: "icon_home.png";
               }
               aspect: 1 1;
               
            }
         }
         part { name: "topbar/title"; /* API */
            type: TEXT;
            clip_to: "topbar/clip";
            description { state: "default" 0.0;
               color: FONT_COLOR;
               rel1 {
                  to: "topbar/clip";
                  offset: 60 0;
               }
               rel2 {
                  to: "topbar/clip";
                  relative: 0.7 1.0;
               }
               text {
                  text: "asd";
                  font: FONT;
                  size: FONT_SIZE;
                  align: 0.0 0.7;
               }
            }
         }
         part { name: "topbar/box"; /* API */
            type: BOX;
            mouse_events: 1;
            repeat_events: 1;
            description { state: "default" 0.0;
               rel1 {
                  to: "topbar/title";
                  relative: 1.0 0.0;
                  offset: 0 5;
               }
               rel2 {
                  to: "topbar/clock";
                  relative: 0.0 1.0;
                  offset: 0 -6;
               }
               box {
                  layout: "horizontal";
                  padding: 0 0;
                  align: 1.0 0.5;
                  min: 0 0;
                }
            }
         }
         part { name: "topbar/clock";
            type: TEXT;
            clip_to: "topbar/clip";
            description { state: "default" 0.0;
               color: FONT_COLOR;
               rel1 {
                  to: "topbar/clip";
                  relative: 1.0 0.0;
                  offset: -150 0;
               }
               rel2 {
                  to: "topbar/clip";
                  offset: -10 0;
               }
               text {
                  text: "12:24";
                  font: FONT;
                  size: FONT_SIZE;
                  align: 1.0 0.5;
               }
            }
         }

/// mainmenu
         part { name: "mainmenu/list"; /* API */
            type: EXTERNAL;
            source: "elm/list";
            description { state: "default" 0;
               rel1 {
                  relative: 0.3 -0.9;
                  offset: 0 0;
               }
               rel2 {
                  relative: 0.7 -0.1;
                  offset: 0 0;
               }
               params {
                  choice: "horizontal mode" "scroll";
                  choice: "scroll horizontal" "off";
                  choice: "scroll vertical" "off";
                  bool: "multi" "0";
                  bool: "always_select" "1";
               }
            }
            description { state: "visible" 0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.3 0.1;
                  offset: 0 0;
               }
               rel2 {
                  relative: 0.7 0.9;
                  offset: 0 0;
               }
            }
         }

/// videoplayer
         part { name: "videoplayer/bg";
            type: RECT;
            mouse_events: 0;
            clip_to: "videoplayer/clip";
            description { state: "default" 0;
               color: 0 0 0 255;
            }
         }
         part { name: "videoplayer/video"; /* API */
            type: SWALLOW;
            clip_to: "videoplayer/clip";
            description { state: "default" 0;
            }
         }
         part { name: "videoplayer/clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0;
               color: 255 255 255 0;
            }
            description { state: "visible" 0;
            }
         }
         part { name: "videoplayer/controls/bg";
            type: RECT;
            mouse_events: 0;
            clip_to: "videoplayer/clip";
            description { state: "default" 0;
               color: 255 255 255 145;
               rel1 {
                  relative: 0 1;
               }
               rel2 {
                  relative: 1 1.2;
                  offset: 0 0;
               }
            }
            description { state: "visible" 0;
               color: 255 255 255 145;
               rel1 {
                  relative: 0 0.8;
               }
               rel2 {
                  offset: 0 0;
               }
            }
         }
         part { name: "videoplayer/controls/btn_swallow"; /* API */
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1.to: "videoplayer/controls/bg";
               rel2.relative: 1.0 0.5;
               rel2.to: "videoplayer/controls/bg";
            }
         }
         part { name: "videoplayer/controls/length"; /* API */
            type: TEXT;
            mouse_events: 0;
            clip_to: "videoplayer/clip";
            description { state: "default" 0;
               color: FONT_COLOR;
               rel1 {
                  to: "videoplayer/controls/slider";
               }
               rel2 {
                  to: "videoplayer/controls/slider";
               }
               text {
                  text: "0:00:00";
                  font: FONT;
                  size: FONT_SIZE;
                  align: 1 0;
               }
            }
         }
         part { name: "videoplayer/controls/position"; /* API */
            type: TEXT;
            mouse_events: 0;
            clip_to: "videoplayer/clip";
            description { state: "default" 0;
               color: FONT_COLOR;
               rel1 {
                  to: "videoplayer/controls/slider";
               }
               rel2 {
                  to: "videoplayer/controls/slider";
               }
               text {
                  text: "0:00:00";
                  font: FONT;
                  size: FONT_SIZE;
                  align: 0 0;
               }
            }
         }
         part { name: "videoplayer/controls/slider"; /* API */
            type: EXTERNAL;
            clip_to: "videoplayer/clip";
            source: "elm/slider";
            description { state: "default" 0;
               rel1 {
                  offset: 0 47;
                  to: "videoplayer/controls/bg";
               }
               rel2 {
                  to: "videoplayer/controls/bg";
               }
               params {
                  string: "label" "";
                  double: "min" "0";
                  double: "max" "1";
                  double: "value" "0.5";
                  bool: "horizontal" "1";
                  bool: "inverted" "0";
                  int: "span" "0";
                  string: "unit format" " ";
                  string: "indicator format" "";
               }
            }
         }

///
         part { name: "config_bg";
            type: IMAGE;
            description { state: "default" 0;
               rel1 {
                  relative: 1 0;
                  offset: 10 20;
               }
               rel2 {
                  relative: 1.75 1;
                  offset: 10 -20;
               }
               image {
                  normal: "bg_configuration.jpg";
               }
            }
            description { state: "visible" 0;
               rel1 {
                  relative: 0.35 0;
                  offset: 0 20;
               }
               rel2 {
                  offset: 0 -20;
               }
               image {
                  normal: "bg_configuration.jpg";
               }
            }
         }
         part { name: "config_pager";
            type: EXTERNAL;
            source: "elm/pager";
            description { state: "default" 0;
               rel1 {
                  offset: 20 20;
                  to: "config_bg";
               }
               rel2 {
                  offset: -20 -20;
                  to: "config_bg";
               }
               params {
                  string: "label" "label goes here";
               }
            }
         }

/// volume
         part { name: "volume/bg";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0;
               color: 255 255 255 145;
               rel1 {
                  relative: 0.6 0;
                  offset: 0 -100;
               }
               rel2 {
                  relative: 1 0.1;
                  offset: 0 -100;
               }
            }
            description { state: "visible" 0;
               color: 255 255 255 145;
               rel1 {
                  relative: 0.6 0;
               }
               rel2 {
                  relative: 1 0.1;
                  offset: 0 0;
               }
            }
         }
         part { name: "volume/slider"; /* API */
            type: EXTERNAL;
            source: "elm/slider";
            description { state: "default" 0;
               rel1 {
                  to: "volume/bg";
               }
               rel2 {
                  to: "volume/bg";
               }
               params {
                  string: "label" "Vol";
                  double: "min" "0";
                  double: "max" "100";
                  double: "value" "10";
                  bool: "horizontal" "1";
                  bool: "inverted" "0";
                  int: "span" "0";
                  string: "unit format" "%.0f";
                  string: "indicator format" "";
               }
            }
         }

/// debug label for embryo scripting
         #if DEBUG_ENABLE
         part { name: "embryo_dbg";
            type: TEXT;
            description { state: "default" 0.0;
               color: FONT_COLOR;
               text {
                  text: "EMBRYO DEBUG ENABLED";
                  font: FONT;
                  size: FONT_SIZE;
                  align: 1.0 1.0;
               }
            }
         }
         #endif
      }
      programs {
         program { name: "init";
            signal: "load";
            source: "";
            script {
               clock_cb(0);
            }
         }
///
         program { name: "mainmenu_show"; /* API */
            signal: "mainmenu,show";
            source: "emc";
            action: STATE_SET "visible" 0.00;
            transition: DECELERATE 0.5;
            target: "mainmenu/list";
         }
         program { name: "mainmenu_hide"; /* API */
            signal: "mainmenu,hide";
            source: "emc";
            action: STATE_SET "default" 0.00;
            transition: ACCELERATE 0.5;
            target: "mainmenu/list";
         }
///
         program { name: "config_show"; /* API */
            signal: "config,show";
            source: "emc";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.5;
            target: "config_bg";
            
            
         }
         program { name: "config_hide"; /* API */
            signal: "config,hide";
            source: "emc";
            action: STATE_SET "default" 0.00;
            transition: ACCELERATE 0.5;
            target: "config_bg";
         }
///
         program { name: "browser_cubelist_show"; /* API */
            signal: "browser,cubelist,show";
            source: "emc";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 1.0;
            target: "browser/cubelist/clip";
         }
         program { name: "browser_cubelist_hide"; /* API */
            signal: "browser,cubelist,hide";
            source: "emc";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 1.0;
            target: "browser/cubelist/clip";
         }
///
         program { name: "browser_list_show"; /* API */
            signal: "browser,list,show";
            source: "emc";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 1.0;
            target: "browser/list/clip";
            target: "browser/list/list_clip";
         }
         program { name: "browser_list_hide"; /* API */
            signal: "browser,list,hide";
            source: "emc";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 1.0;
            target: "browser/list/clip";
            target: "browser/list/list_clip";
         }
         program { name: "browser_list_flip_left"; /* API */
            signal: "browser,list,flip_left";
            source: "emc";
            script {
               new buf[16];
               new Float:val;
               get_state(PART:"browser/list/genlist1", buf, sizeof(buf), val);
               DBG("%s   %f", buf, val)
               if (!strcmp(buf, "default") || !strcmp(buf, "center")) {
                  DBG("CASE 1")
                  set_state(PART:"browser/list/genlist2", "on_the_right", 0.0);
                  run_program(PROGRAM:"gl1_to_left");
               }
               else if (!strcmp(buf, "left")) {
                  DBG("CASE 2")
                  set_state(PART:"browser/list/genlist1", "right", 0.0);
                  set_state(PART:"browser/list/genlist2", "on_the_left", 0.0);
                  run_program(PROGRAM:"gl1_to_center");
               }
               else if (!strcmp(buf, "right")) {
                  DBG("CASE 3")
                  run_program(PROGRAM:"gl1_to_center");
               }
            }
         }
         program { name: "browser_list_flip_right"; /* API */
            signal: "browser,list,flip_right";
            source: "emc";
            script {
               new buf[16];
               new Float:val;
               get_state(PART:"browser/list/genlist1", buf, sizeof(buf), val);
               DBG("%s   %f", buf, val)
               if (!strcmp(buf, "default") || !strcmp(buf, "center")) {
                  DBG("CASE 1 (back)")
                  set_state(PART:"browser/list/genlist2", "on_the_left", 0.0);
                  run_program(PROGRAM:"gl1_to_right");
               }
               else if (!strcmp(buf, "right")) {
                  DBG("CASE 2 (back)")
                  set_state(PART:"browser/list/genlist1", "left", 0.0);
                  set_state(PART:"browser/list/genlist2", "on_the_right", 0.0);
                  run_program(PROGRAM:"gl1_to_center");
               }
               else if (!strcmp(buf, "left")) {
                  DBG("CASE 3 (back)")
                  run_program(PROGRAM:"gl1_to_center");
               }
            }
         }
         program { name: "gl1_to_left";
            action: STATE_SET "left" 0.0;
            transition: LINEAR 0.4;
            target: "browser/list/genlist1";
         }
         program { name: "gl1_to_right";
            action: STATE_SET "right" 0.0;
            transition: LINEAR 0.4;
            target: "browser/list/genlist1";
         }
         program { name: "gl1_to_center";
            action: STATE_SET "center" 0.0;
            transition: LINEAR 0.4;
            target: "browser/list/genlist1";
         }
///
         program { name: "browser_grid_show"; /* API */
            signal: "browser,grid,show";
            source: "emc";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 1.0;
            target: "browser/grid/clip";
         }
         program { name: "browser_grid_hide"; /* API */
            signal: "browser,grid,hide";
            source: "emc";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 1.0;
            target: "browser/grid/clip";
         }
///
         program { name: "topbar_show"; /* API */
            signal: "topbar,show";
            source: "emc";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.4;
            target: "topbar/clip";
         }
         program { name: "topbar_hide"; /* API */
            signal: "topbar,hide";
            source: "emc";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 0.4;
            target: "topbar/clip";
         }
///
         program { name: "videoplayer_show"; /* API */
            signal: "videoplayer,show";
            source: "emc";
            action: STATE_SET "visible" 0.00;
            transition: LINEAR 0.5;
            target: "videoplayer/clip";
            
         }
         program { name: "videoplayer_hide"; /* API */
            signal: "videoplayer,hide";
            source: "emc";
            action: STATE_SET "default" 0.00;
            transition: LINEAR 0.5;
            target: "videoplayer/clip";
         }
         program { name: "videoplayer_controls_show"; /* API */
            signal: "videoplayer,controls,show";
            source: "emc";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.5;
            target: "videoplayer/controls/bg";
         }
         program { name: "videoplayer_controls_hide"; /* API */
            signal: "videoplayer,controls,hide";
            source: "emc";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.5;
            target: "videoplayer/controls/bg";
         }
///
         program { name: "volume_show"; /* API */
            signal: "volume,show";
            source: "emc";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.5;
            target: "volume/bg";
         }
         program { name: "volume_hide"; /* API */
            signal: "volume,hide";
            source: "emc";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 0.5;
            target: "volume/bg";
         }
      }
   }
}

